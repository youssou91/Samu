{"version":3,"file":"RendezVous.js","names":["mongoose","require","rendezVousSchema","Schema","patient","type","Types","ObjectId","ref","required","patientNom","String","trim","patientTelephone","medecin","medecinNom","dateDebut","Date","dateFin","enum","default","statut","motif","notes","presenceConfirmee","Boolean","heureArrivee","creePar","modifiePar","dateCreation","now","dateMiseAJour","toJSON","virtuals","toObject","index","pre","next","isModified","conflit","constructor","findOne","_id","$ne","$or","$lt","$gt","Error","statics","verifierDisponibilite","medecinId","rendezVousId","filtre","RendezVous","model","module","exports"],"sources":["../../src/models/RendezVous.js"],"sourcesContent":["const mongoose = require('mongoose');\n\nconst rendezVousSchema = new mongoose.Schema({\n  // Référence au patient (peut être un utilisateur ou un patient externe)\n  patient: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Utilisateur',\n    required: true\n  },\n  patientNom: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  patientTelephone: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  \n  // Référence au médecin\n  medecin: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Utilisateur',\n    required: true\n  },\n  medecinNom: {\n    type: String,\n    required: true,\n    trim: true\n  },\n  \n  // Détails du rendez-vous\n  dateDebut: {\n    type: Date,\n    required: true\n  },\n  dateFin: {\n    type: Date,\n    required: true\n  },\n  \n  // Type de consultation\n  type: {\n    type: String,\n    enum: ['consultation', 'controle', 'urgence', 'autre'],\n    default: 'consultation',\n    required: true\n  },\n  \n  // Statut du rendez-vous\n  statut: {\n    type: String,\n    enum: ['en_attente', 'confirme', 'en_cours', 'termine', 'annule', 'rate'],\n    default: 'en_attente',\n    required: true\n  },\n  \n  // Informations supplémentaires\n  motif: {\n    type: String,\n    trim: true\n  },\n  notes: {\n    type: String,\n    trim: true\n  },\n  \n  // Suivi\n  presenceConfirmee: {\n    type: Boolean,\n    default: false\n  },\n  heureArrivee: {\n    type: Date\n  },\n  \n  // Métadonnées\n  creePar: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Utilisateur',\n    required: true\n  },\n  modifiePar: {\n    type: mongoose.Schema.Types.ObjectId,\n    ref: 'Utilisateur'\n  },\n  dateCreation: {\n    type: Date,\n    default: Date.now\n  },\n  dateMiseAJour: {\n    type: Date\n  }\n}, {\n  toJSON: { virtuals: true },\n  toObject: { virtuals: true }\n});\n\n// Index pour les requêtes fréquentes\nrendezVousSchema.index({ medecin: 1, dateDebut: 1, dateFin: 1 });\nrendezVousSchema.index({ patient: 1, dateDebut: 1 });\nrendezVousSchema.index({ statut: 1, dateDebut: 1 });\n\n// Vérifier les conflits de rendez-vous\nrendezVousSchema.pre('save', async function(next) {\n  if (this.isModified('dateDebut') || this.isModified('dateFin') || this.isModified('medecin')) {\n    const conflit = await this.constructor.findOne({\n      _id: { $ne: this._id },\n      medecin: this.medecin,\n      statut: { $ne: 'annule' },\n      $or: [\n        { dateDebut: { $lt: this.dateFin }, dateFin: { $gt: this.dateDebut } }\n      ]\n    });\n    \n    if (conflit) {\n      throw new Error('Conflit de rendez-vous avec un autre créneau du médecin');\n    }\n  }\n  next();\n});\n\n// Méthode pour vérifier la disponibilité d'un créneau\nrendezVousSchema.statics.verifierDisponibilite = async function(medecinId, dateDebut, dateFin, rendezVousId = null) {\n  const filtre = {\n    medecin: medecinId,\n    statut: { $ne: 'annule' },\n    $or: [\n      { dateDebut: { $lt: dateFin }, dateFin: { $gt: dateDebut } }\n    ]\n  };\n  \n  if (rendezVousId) {\n    filtre._id = { $ne: rendezVousId };\n  }\n  \n  const conflit = await this.findOne(filtre);\n  return !conflit;\n};\n\n// Middleware pour mettre à jour la date de mise à jour\nrendezVousSchema.pre('save', function(next) {\n  this.dateMiseAJour = Date.now();\n  next();\n});\n\nconst RendezVous = mongoose.model('RendezVous', rendezVousSchema);\n\nmodule.exports = RendezVous;\n"],"mappings":"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","ignoreList":[]}