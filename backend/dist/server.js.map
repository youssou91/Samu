{"version":3,"file":"server.js","names":["require","config","express","mongoose","cors","helmet","rateLimit","mongoSanitize","xss","hpp","path","http","routesAuth","routesRendezVous","routesRapports","app","PORT","process","env","MONGODB_URI","use","origin","NODE_ENV","CLIENT_URL","methods","allowedHeaders","credentials","optionsSuccessStatus","json","limit","whitelist","limiter","max","windowMs","message","get","req","res","status","timestamp","Date","toISOString","version","endpoints","auth","rendezVous","rapports","all","next","originalUrl","err","name","errors","Object","values","map","el","field","code","keys","keyValue","SyntaxError","console","error","startServer","log","replace","connect","useNewUrlParser","useUnifiedTopology","serverSelectionTimeoutMS","socketTimeoutMS","method","server","listen","toLocaleString","gracefulShutdown","Promise","resolve","close","connection","exit","on","module","exports"],"sources":["../src/server.js"],"sourcesContent":["require('dotenv').config();\nconst express = require('express');\nconst mongoose = require('mongoose');\nconst cors = require('cors');\nconst helmet = require('helmet');\nconst rateLimit = require('express-rate-limit');\nconst mongoSanitize = require('express-mongo-sanitize');\nconst xss = require('xss-clean');\nconst hpp = require('hpp');\nconst path = require('path');\nconst http = require('http');\n\n// Import des routes\nconst routesAuth = require('./routes/authRoutes');\nconst routesRendezVous = require('./routes/rendezVousRoutes');\nconst routesRapports = require('./routes/rapports');\n\n// Initialisation de l'application Express\nconst app = express();\nconst PORT = process.env.PORT || 5000;\nconst MONGODB_URI = process.env.MONGODB_URI || 'mongodb://localhost:27017/presence-management';\n\n// Middleware de s√©curit√©\napp.use(helmet());\napp.use(cors({\n  origin: process.env.NODE_ENV === 'production' \n    ? process.env.CLIENT_URL \n    : 'http://localhost:3000',\n  methods: ['GET', 'POST', 'PUT', 'DELETE', 'PATCH', 'OPTIONS'],\n  allowedHeaders: ['Content-Type', 'Authorization'],\n  credentials: true,\n  optionsSuccessStatus: 200\n}));\n\napp.use(express.json({ limit: '10kb' }));\napp.use(mongoSanitize());\napp.use(xss());\napp.use(hpp({\n  whitelist: ['dateDebut', 'dateFin', 'statut', 'sort', 'page', 'limit', 'fields']\n}));\n\n// Limite le taux de requ√™tes\nconst limiter = rateLimit({\n  max: 100,\n  windowMs: 15 * 60 * 1000, // 15 minutes\n  message: 'Trop de requ√™tes depuis cette adresse IP, veuillez r√©essayer dans 15 minutes.'\n});\napp.use('/api', limiter);\n\n// Routes API\napp.use('/api/auth', routesAuth);\napp.use('/api/rendez-vous', routesRendezVous);\napp.use('/api/rapports', routesRapports);\n\n// Route de test\napp.get('/api', (req, res) => {\n  res.status(200).json({\n    status: 'success',\n    message: 'API de gestion des pr√©sences en cours d\\'ex√©cution',\n    timestamp: new Date().toISOString(),\n    version: '1.0.0',\n    endpoints: {\n      auth: '/api/auth',\n      rendezVous: '/api/rendez-vous',\n      rapports: '/api/rapports'\n    }\n  });\n});\n\n// Gestion des routes non trouv√©es\napp.all('*', (req, res, next) => {\n  res.status(404).json({\n    status: 'error',\n    message: `Impossible de trouver ${req.originalUrl} sur ce serveur.`\n  });\n});\n\n// Gestion globale des erreurs\napp.use((err, req, res, next) => {\n  // Erreur de validation\n  if (err.name === 'ValidationError') {\n    const errors = Object.values(err.errors).map(el => ({\n      field: el.path,\n      message: el.message\n    }));\n    \n    return res.status(400).json({\n      status: 'error',\n      message: 'Erreur de validation',\n      errors\n    });\n  }\n  \n  // Erreur JWT\n  if (err.name === 'JsonWebTokenError') {\n    return res.status(401).json({\n      status: 'error',\n      message: 'Token invalide. Veuillez vous reconnecter.'\n    });\n  }\n  \n  // Erreur JWT expir√©\n  if (err.name === 'TokenExpiredError') {\n    return res.status(401).json({\n      status: 'error',\n      message: 'Votre session a expir√©. Veuillez vous reconnecter.'\n    });\n  }\n  \n  // Erreur de duplication de cl√© (MongoDB)\n  if (err.code === 11000) {\n    const field = Object.keys(err.keyValue)[0];\n    return res.status(400).json({\n      status: 'error',\n      message: `La valeur du champ '${field}' est d√©j√† utilis√©e.`\n    });\n  }\n  \n  // Erreur de syntaxe JSON\n  if (err instanceof SyntaxError && err.status === 400 && 'body' in err) {\n    return res.status(400).json({\n      status: 'error',\n      message: 'Erreur de syntaxe dans le corps de la requ√™te.'\n    });\n  }\n  \n  // Erreur serveur par d√©faut\n  console.error('‚ùå Erreur:', err);\n  res.status(500).json({\n    status: 'error',\n    message: 'Une erreur est survenue sur le serveur.'\n  });\n});\n\n// Connexion √† la base de donn√©es et d√©marrage du serveur\nconst startServer = async () => {\n  try {\n    console.log('üîç Tentative de connexion √† MongoDB...');\n    console.log('üîó URL de connexion:', MONGODB_URI.replace(/\\/\\/([^:]+):([^@]+)@/, '//***:***@'));\n    \n    await mongoose.connect(MONGODB_URI, {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      serverSelectionTimeoutMS: 5000,\n      socketTimeoutMS: 45000\n    });\n    \n    console.log('‚úÖ Connect√© √† MongoDB');\n    \n    // Middleware de logging des requ√™tes\n    app.use((req, res, next) => {\n      console.log(`üåê ${req.method} ${req.originalUrl}`);\n      next();\n    });\n    \n    const server = app.listen(PORT, '0.0.0.0', () => {\n      console.log(`üöÄ Serveur d√©marr√© sur http://localhost:${PORT}`);\n      console.log(`‚öôÔ∏è  Environnement: ${process.env.NODE_ENV || 'development'}`);\n      console.log('üìÖ', new Date().toLocaleString());\n    });\n\n    // Gestion de l'arr√™t gracieux\n    const gracefulShutdown = async () => {\n      console.log('\\nüõë Arr√™t gracieux du serveur...');\n      \n      // Fermer le serveur\n      await new Promise(resolve => server.close(resolve));\n      console.log('‚úÖ Serveur arr√™t√©');\n      \n      // Fermer la connexion √† MongoDB\n      await mongoose.connection.close();\n      console.log('‚úÖ Connexion √† MongoDB ferm√©e');\n      \n      process.exit(0);\n    };\n\n    // Gestion des signaux d'arr√™t\n    process.on('SIGTERM', gracefulShutdown);\n    process.on('SIGINT', gracefulShutdown);\n    \n  } catch (error) {\n    console.error('‚ùå Erreur de d√©marrage du serveur:', error.message);\n    process.exit(1);\n  }\n};\n\n// D√©marrer le serveur\nif (process.env.NODE_ENV !== 'test') {\n  startServer();\n}\n\nmodule.exports = { app, startServer };\n"],"mappings":"aAAAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,CAAC,CAAC;AAC1B,MAAMC,OAAO,GAAGF,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMG,QAAQ,GAAGH,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMI,IAAI,GAAGJ,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMK,MAAM,GAAGL,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMM,SAAS,GAAGN,OAAO,CAAC,oBAAoB,CAAC;AAC/C,MAAMO,aAAa,GAAGP,OAAO,CAAC,wBAAwB,CAAC;AACvD,MAAMQ,GAAG,GAAGR,OAAO,CAAC,WAAW,CAAC;AAChC,MAAMS,GAAG,GAAGT,OAAO,CAAC,KAAK,CAAC;AAC1B,MAAMU,IAAI,GAAGV,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMW,IAAI,GAAGX,OAAO,CAAC,MAAM,CAAC;;AAE5B;AACA,MAAMY,UAAU,GAAGZ,OAAO,CAAC,qBAAqB,CAAC;AACjD,MAAMa,gBAAgB,GAAGb,OAAO,CAAC,2BAA2B,CAAC;AAC7D,MAAMc,cAAc,GAAGd,OAAO,CAAC,mBAAmB,CAAC;;AAEnD;AACA,MAAMe,GAAG,GAAGb,OAAO,CAAC,CAAC;AACrB,MAAMc,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AACrC,MAAMG,WAAW,GAAGF,OAAO,CAACC,GAAG,CAACC,WAAW,IAAI,+CAA+C;;AAE9F;AACAJ,GAAG,CAACK,GAAG,CAACf,MAAM,CAAC,CAAC,CAAC;AACjBU,GAAG,CAACK,GAAG,CAAChB,IAAI,CAAC;EACXiB,MAAM,EAAEJ,OAAO,CAACC,GAAG,CAACI,QAAQ,KAAK,YAAY;EACzCL,OAAO,CAACC,GAAG,CAACK,UAAU;EACtB,uBAAuB;EAC3BC,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,OAAO,EAAE,SAAS,CAAC;EAC7DC,cAAc,EAAE,CAAC,cAAc,EAAE,eAAe,CAAC;EACjDC,WAAW,EAAE,IAAI;EACjBC,oBAAoB,EAAE;AACxB,CAAC,CAAC,CAAC;;AAEHZ,GAAG,CAACK,GAAG,CAAClB,OAAO,CAAC0B,IAAI,CAAC,EAAEC,KAAK,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;AACxCd,GAAG,CAACK,GAAG,CAACb,aAAa,CAAC,CAAC,CAAC;AACxBQ,GAAG,CAACK,GAAG,CAACZ,GAAG,CAAC,CAAC,CAAC;AACdO,GAAG,CAACK,GAAG,CAACX,GAAG,CAAC;EACVqB,SAAS,EAAE,CAAC,WAAW,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ;AACjF,CAAC,CAAC,CAAC;;AAEH;AACA,MAAMC,OAAO,GAAGzB,SAAS,CAAC;EACxB0B,GAAG,EAAE,GAAG;EACRC,QAAQ,EAAE,EAAE,GAAG,EAAE,GAAG,IAAI,EAAE;EAC1BC,OAAO,EAAE;AACX,CAAC,CAAC;AACFnB,GAAG,CAACK,GAAG,CAAC,MAAM,EAAEW,OAAO,CAAC;;AAExB;AACAhB,GAAG,CAACK,GAAG,CAAC,WAAW,EAAER,UAAU,CAAC;AAChCG,GAAG,CAACK,GAAG,CAAC,kBAAkB,EAAEP,gBAAgB,CAAC;AAC7CE,GAAG,CAACK,GAAG,CAAC,eAAe,EAAEN,cAAc,CAAC;;AAExC;AACAC,GAAG,CAACoB,GAAG,CAAC,MAAM,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EAC5BA,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACV,IAAI,CAAC;IACnBU,MAAM,EAAE,SAAS;IACjBJ,OAAO,EAAE,oDAAoD;IAC7DK,SAAS,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnCC,OAAO,EAAE,OAAO;IAChBC,SAAS,EAAE;MACTC,IAAI,EAAE,WAAW;MACjBC,UAAU,EAAE,kBAAkB;MAC9BC,QAAQ,EAAE;IACZ;EACF,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA/B,GAAG,CAACgC,GAAG,CAAC,GAAG,EAAE,CAACX,GAAG,EAAEC,GAAG,EAAEW,IAAI,KAAK;EAC/BX,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACV,IAAI,CAAC;IACnBU,MAAM,EAAE,OAAO;IACfJ,OAAO,EAAE,yBAAyBE,GAAG,CAACa,WAAW;EACnD,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACAlC,GAAG,CAACK,GAAG,CAAC,CAAC8B,GAAG,EAAEd,GAAG,EAAEC,GAAG,EAAEW,IAAI,KAAK;EAC/B;EACA,IAAIE,GAAG,CAACC,IAAI,KAAK,iBAAiB,EAAE;IAClC,MAAMC,MAAM,GAAGC,MAAM,CAACC,MAAM,CAACJ,GAAG,CAACE,MAAM,CAAC,CAACG,GAAG,CAAC,CAAAC,EAAE,MAAK;MAClDC,KAAK,EAAED,EAAE,CAAC9C,IAAI;MACdwB,OAAO,EAAEsB,EAAE,CAACtB;IACd,CAAC,CAAC,CAAC;;IAEH,OAAOG,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACV,IAAI,CAAC;MAC1BU,MAAM,EAAE,OAAO;MACfJ,OAAO,EAAE,sBAAsB;MAC/BkB;IACF,CAAC,CAAC;EACJ;;EAEA;EACA,IAAIF,GAAG,CAACC,IAAI,KAAK,mBAAmB,EAAE;IACpC,OAAOd,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACV,IAAI,CAAC;MAC1BU,MAAM,EAAE,OAAO;MACfJ,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;;EAEA;EACA,IAAIgB,GAAG,CAACC,IAAI,KAAK,mBAAmB,EAAE;IACpC,OAAOd,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACV,IAAI,CAAC;MAC1BU,MAAM,EAAE,OAAO;MACfJ,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;;EAEA;EACA,IAAIgB,GAAG,CAACQ,IAAI,KAAK,KAAK,EAAE;IACtB,MAAMD,KAAK,GAAGJ,MAAM,CAACM,IAAI,CAACT,GAAG,CAACU,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1C,OAAOvB,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACV,IAAI,CAAC;MAC1BU,MAAM,EAAE,OAAO;MACfJ,OAAO,EAAE,uBAAuBuB,KAAK;IACvC,CAAC,CAAC;EACJ;;EAEA;EACA,IAAIP,GAAG,YAAYW,WAAW,IAAIX,GAAG,CAACZ,MAAM,KAAK,GAAG,IAAI,MAAM,IAAIY,GAAG,EAAE;IACrE,OAAOb,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACV,IAAI,CAAC;MAC1BU,MAAM,EAAE,OAAO;MACfJ,OAAO,EAAE;IACX,CAAC,CAAC;EACJ;;EAEA;EACA4B,OAAO,CAACC,KAAK,CAAC,WAAW,EAAEb,GAAG,CAAC;EAC/Bb,GAAG,CAACC,MAAM,CAAC,GAAG,CAAC,CAACV,IAAI,CAAC;IACnBU,MAAM,EAAE,OAAO;IACfJ,OAAO,EAAE;EACX,CAAC,CAAC;AACJ,CAAC,CAAC;;AAEF;AACA,MAAM8B,WAAW,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAI;IACFF,OAAO,CAACG,GAAG,CAAC,wCAAwC,CAAC;IACrDH,OAAO,CAACG,GAAG,CAAC,sBAAsB,EAAE9C,WAAW,CAAC+C,OAAO,CAAC,sBAAsB,EAAE,YAAY,CAAC,CAAC;;IAE9F,MAAM/D,QAAQ,CAACgE,OAAO,CAAChD,WAAW,EAAE;MAClCiD,eAAe,EAAE,IAAI;MACrBC,kBAAkB,EAAE,IAAI;MACxBC,wBAAwB,EAAE,IAAI;MAC9BC,eAAe,EAAE;IACnB,CAAC,CAAC;;IAEFT,OAAO,CAACG,GAAG,CAAC,sBAAsB,CAAC;;IAEnC;IACAlD,GAAG,CAACK,GAAG,CAAC,CAACgB,GAAG,EAAEC,GAAG,EAAEW,IAAI,KAAK;MAC1Bc,OAAO,CAACG,GAAG,CAAC,MAAM7B,GAAG,CAACoC,MAAM,IAAIpC,GAAG,CAACa,WAAW,EAAE,CAAC;MAClDD,IAAI,CAAC,CAAC;IACR,CAAC,CAAC;;IAEF,MAAMyB,MAAM,GAAG1D,GAAG,CAAC2D,MAAM,CAAC1D,IAAI,EAAE,SAAS,EAAE,MAAM;MAC/C8C,OAAO,CAACG,GAAG,CAAC,2CAA2CjD,IAAI,EAAE,CAAC;MAC9D8C,OAAO,CAACG,GAAG,CAAC,sBAAsBhD,OAAO,CAACC,GAAG,CAACI,QAAQ,IAAI,aAAa,EAAE,CAAC;MAC1EwC,OAAO,CAACG,GAAG,CAAC,IAAI,EAAE,IAAIzB,IAAI,CAAC,CAAC,CAACmC,cAAc,CAAC,CAAC,CAAC;IAChD,CAAC,CAAC;;IAEF;IACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACnCd,OAAO,CAACG,GAAG,CAAC,mCAAmC,CAAC;;MAEhD;MACA,MAAM,IAAIY,OAAO,CAAC,CAAAC,OAAO,KAAIL,MAAM,CAACM,KAAK,CAACD,OAAO,CAAC,CAAC;MACnDhB,OAAO,CAACG,GAAG,CAAC,kBAAkB,CAAC;;MAE/B;MACA,MAAM9D,QAAQ,CAAC6E,UAAU,CAACD,KAAK,CAAC,CAAC;MACjCjB,OAAO,CAACG,GAAG,CAAC,8BAA8B,CAAC;;MAE3ChD,OAAO,CAACgE,IAAI,CAAC,CAAC,CAAC;IACjB,CAAC;;IAED;IACAhE,OAAO,CAACiE,EAAE,CAAC,SAAS,EAAEN,gBAAgB,CAAC;IACvC3D,OAAO,CAACiE,EAAE,CAAC,QAAQ,EAAEN,gBAAgB,CAAC;;EAExC,CAAC,CAAC,OAAOb,KAAK,EAAE;IACdD,OAAO,CAACC,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC7B,OAAO,CAAC;IACjEjB,OAAO,CAACgE,IAAI,CAAC,CAAC,CAAC;EACjB;AACF,CAAC;;AAED;AACA,IAAIhE,OAAO,CAACC,GAAG,CAACI,QAAQ,KAAK,MAAM,EAAE;EACnC0C,WAAW,CAAC,CAAC;AACf;;AAEAmB,MAAM,CAACC,OAAO,GAAG,EAAErE,GAAG,EAAEiD,WAAW,CAAC,CAAC","ignoreList":[]}