{"version":3,"file":"index.js","names":["v4","uuidv4","require","crypto","moment","promisify","jwt","logger","BadRequestError","UnauthorizedError","ForbiddenError","NotFoundError","ConflictError","ValidationError","TooManyRequestsError","InternalServerError","generateToken","userId","role","expiresIn","payload","sub","iat","Math","floor","Date","now","signAsync","sign","bind","process","env","JWT_SECRET","error","verifyToken","token","verifyAsync","verify","name","hashPassword","password","salt","bcrypt","genSalt","hash","comparePasswords","hashedPassword","compare","generateResetToken","resetToken","randomBytes","toString","hashedToken","createHash","update","digest","formatFrenchDate","date","withTime","options","weekday","year","month","day","hour","minute","toLocaleDateString","getDurationInMinutes","startDate","endDate","round","isWorkingDay","getDay","isWorkingHour","hours","getHours","generateDossierNumber","getFullYear","slice","getMonth","padStart","random","module","exports"],"sources":["../../src/utils/index.js"],"sourcesContent":["const { v4: uuidv4 } = require('uuid');\nconst crypto = require('crypto');\nconst moment = require('moment-timezone');\nconst { promisify } = require('util');\nconst jwt = require('jsonwebtoken');\nconst logger = require('../config/logger');\nconst {\n  BadRequestError,\n  UnauthorizedError,\n  ForbiddenError,\n  NotFoundError,\n  ConflictError,\n  ValidationError,\n  TooManyRequestsError,\n  InternalServerError,\n} = require('./errors');\n\n/**\n * Génère un token JWT\n * @param {string} userId - L'ID de l'utilisateur\n * @param {string} role - Le rôle de l'utilisateur\n * @param {string} expiresIn - La durée de validité du token (ex: '1d', '7d')\n * @returns {Promise<string>} Le token JWT\n */\nconst generateToken = async (userId, role, expiresIn = '1d') => {\n  try {\n    const payload = {\n      sub: userId,\n      role,\n      iat: Math.floor(Date.now() / 1000),\n    };\n\n    const signAsync = promisify(jwt.sign).bind(jwt);\n    return await signAsync(payload, process.env.JWT_SECRET, { expiresIn });\n  } catch (error) {\n    logger.error('Erreur lors de la génération du token:', error);\n    throw new InternalServerError('Erreur lors de la génération du token');\n  }\n};\n\n/**\n * Vérifie et décode un token JWT\n * @param {string} token - Le token JWT à vérifier\n * @returns {Promise<Object>} Le payload décodé\n */\nconst verifyToken = async (token) => {\n  try {\n    const verifyAsync = promisify(jwt.verify).bind(jwt);\n    return await verifyAsync(token, process.env.JWT_SECRET);\n  } catch (error) {\n    if (error.name === 'TokenExpiredError') {\n      throw new UnauthorizedError('Token expiré');\n    }\n    if (error.name === 'JsonWebTokenError') {\n      throw new UnauthorizedError('Token invalide');\n    }\n    logger.error('Erreur lors de la vérification du token:', error);\n    throw new InternalServerError('Erreur lors de la vérification du token');\n  }\n};\n\n/**\n * Génère un hash de mot de passe avec bcrypt\n * @param {string} password - Le mot de passe à hacher\n * @returns {Promise<string>} Le mot de passe haché\n */\nconst hashPassword = async (password) => {\n  try {\n    const salt = await bcrypt.genSalt(10);\n    return await bcrypt.hash(password, salt);\n  } catch (error) {\n    logger.error('Erreur lors du hachage du mot de passe:', error);\n    throw new InternalServerError('Erreur lors du hachage du mot de passe');\n  }\n};\n\n/**\n * Compare un mot de passe avec un hash\n * @param {string} password - Le mot de passe en clair\n * @param {string} hashedPassword - Le mot de passe haché\n * @returns {Promise<boolean>} True si les mots de passe correspondent\n */\nconst comparePasswords = async (password, hashedPassword) => {\n  try {\n    return await bcrypt.compare(password, hashedPassword);\n  } catch (error) {\n    logger.error('Erreur lors de la comparaison des mots de passe:', error);\n    throw new InternalServerError('Erreur lors de la vérification du mot de passe');\n  }\n};\n\n/**\n * Génère un token de réinitialisation de mot de passe\n * @returns {string} Un token sécurisé\n */\nconst generateResetToken = () => {\n  const resetToken = crypto.randomBytes(32).toString('hex');\n  const hashedToken = crypto\n    .createHash('sha256')\n    .update(resetToken)\n    .digest('hex');\n  \n  return { resetToken, hashedToken };\n};\n\n/**\n * Formate une date au format français\n * @param {Date} date - La date à formater\n * @param {boolean} withTime - Inclure l'heure dans le formatage\n * @returns {string} La date formatée\n */\nconst formatFrenchDate = (date, withTime = false) => {\n  const options = {\n    weekday: 'long',\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  };\n\n  if (withTime) {\n    options.hour = '2-digit';\n    options.minute = '2-digit';\n  }\n\n  return date.toLocaleDateString('fr-FR', options);\n};\n\n/**\n * Calcule la durée entre deux dates en minutes\n * @param {Date} startDate - Date de début\n * @param {Date} endDate - Date de fin\n * @returns {number} Durée en minutes\n */\nconst getDurationInMinutes = (startDate, endDate) => {\n  return Math.round((endDate - startDate) / (1000 * 60));\n};\n\n/**\n * Vérifie si une date est un jour ouvré (du lundi au vendredi)\n * @param {Date} date - La date à vérifier\n * @returns {boolean} True si c'est un jour ouvré\n */\nconst isWorkingDay = (date) => {\n  const day = date.getDay();\n  return day >= 1 && day <= 5; // 1 = lundi, 5 = vendredi\n};\n\n/**\n * Vérifie si une heure est dans les heures ouvrables (9h-18h)\n * @param {Date} date - La date avec l'heure à vérifier\n * @returns {boolean} True si c'est une heure ouvrable\n */\nconst isWorkingHour = (date) => {\n  const hours = date.getHours();\n  return hours >= 9 && hours < 18;\n};\n\n/**\n * Génère un numéro de dossier unique\n * @returns {string} Un numéro de dossier unique\n */\nconst generateDossierNumber = () => {\n  const date = new Date();\n  const year = date.getFullYear().toString().slice(-2);\n  const month = (date.getMonth() + 1).toString().padStart(2, '0');\n  const random = Math.floor(1000 + Math.random() * 9000);\n  return `DOS-${year}${month}-${random}`;\n};\n\nmodule.exports = {\n  // Génération et vérification\n  generateToken,\n  verifyToken,\n  hashPassword,\n  comparePasswords,\n  generateResetToken,\n  \n  // Dates\n  formatFrenchDate,\n  getDurationInMinutes,\n  isWorkingDay,\n  isWorkingHour,\n  \n  // Utilitaires\n  generateDossierNumber,\n  \n  // Erreurs\n  BadRequestError,\n  UnauthorizedError,\n  ForbiddenError,\n  NotFoundError,\n  ConflictError,\n  ValidationError,\n  TooManyRequestsError,\n  InternalServerError,\n  \n  // Autres\n  uuidv4,\n  moment,\n  logger,\n};\n"],"mappings":"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","ignoreList":[]}