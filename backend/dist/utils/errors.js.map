{"version":3,"file":"errors.js","names":["BaseError","Error","constructor","name","message","statusCode","isOperational","details","captureStackTrace","toJSON","success","process","env","NODE_ENV","stack","Object","keys","length","BadRequestError","UnauthorizedError","ForbiddenError","NotFoundError","resource","ConflictError","ValidationError","errors","TooManyRequestsError","InternalServerError","errorHandler","err","req","res","next","console","error","status","json","module","exports"],"sources":["../../src/utils/errors.js"],"sourcesContent":["/**\n * Classe de base pour les erreurs personnalisées\n * @extends Error\n */\nclass BaseError extends Error {\n  /**\n   * Crée une nouvelle instance de BaseError\n   * @param {string} name - Le nom de l'erreur\n   * @param {string} message - Le message d'erreur\n   * @param {number} statusCode - Le code de statut HTTP\n   * @param {boolean} isOperational - Si l'erreur est opérationnelle\n   * @param {Object} details - Détails supplémentaires sur l'erreur\n   */\n  constructor(name, message, statusCode, isOperational = true, details = {}) {\n    super(message);\n    this.name = name;\n    this.statusCode = statusCode;\n    this.isOperational = isOperational;\n    this.details = details;\n    \n    // Capture la pile d'appels pour le débogage\n    Error.captureStackTrace(this, this.constructor);\n  }\n\n  /**\n   * Convertit l'erreur en objet JSON pour la réponse API\n   * @returns {Object} L'erreur sous forme d'objet\n   */\n  toJSON() {\n    return {\n      success: false,\n      name: this.name,\n      message: this.message,\n      statusCode: this.statusCode,\n      ...(process.env.NODE_ENV === 'development' && { stack: this.stack }),\n      ...(Object.keys(this.details).length > 0 && { details: this.details }),\n    };\n  }\n}\n\n/**\n * Erreur 400 - Requête incorrecte\n * @extends BaseError\n */\nclass BadRequestError extends BaseError {\n  /**\n   * Crée une nouvelle instance de BadRequestError\n   * @param {string} message - Le message d'erreur\n   * @param {Object} details - Détails supplémentaires sur l'erreur\n   */\n  constructor(message = 'Requête incorrecte', details = {}) {\n    super('BadRequestError', message, 400, true, details);\n  }\n}\n\n/**\n * Erreur 401 - Non autorisé\n * @extends BaseError\n */\nclass UnauthorizedError extends BaseError {\n  /**\n   * Crée une nouvelle instance de UnauthorizedError\n   * @param {string} message - Le message d'erreur\n   * @param {Object} details - Détails supplémentaires sur l'erreur\n   */\n  constructor(message = 'Non autorisé', details = {}) {\n    super('UnauthorizedError', message, 401, true, details);\n  }\n}\n\n/**\n * Erreur 403 - Accès refusé\n * @extends BaseError\n */\nclass ForbiddenError extends BaseError {\n  /**\n   * Crée une nouvelle instance de ForbiddenError\n   * @param {string} message - Le message d'erreur\n   * @param {Object} details - Détails supplémentaires sur l'erreur\n   */\n  constructor(message = 'Accès refusé', details = {}) {\n    super('ForbiddenError', message, 403, true, details);\n  }\n}\n\n/**\n * Erreur 404 - Ressource non trouvée\n * @extends BaseError\n */\nclass NotFoundError extends BaseError {\n  /**\n   * Crée une nouvelle instance de NotFoundError\n   * @param {string} resource - Le nom de la ressource non trouvée\n   * @param {Object} details - Détails supplémentaires sur l'erreur\n   */\n  constructor(resource = 'Ressource', details = {}) {\n    super('NotFoundError', `${resource} non trouvé(e)`, 404, true, details);\n  }\n}\n\n/**\n * Erreur 409 - Conflit\n * @extends BaseError\n */\nclass ConflictError extends BaseError {\n  /**\n   * Crée une nouvelle instance de ConflictError\n   * @param {string} message - Le message d'erreur\n   * @param {Object} details - Détails supplémentaires sur l'erreur\n   */\n  constructor(message = 'Conflit détecté', details = {}) {\n    super('ConflictError', message, 409, true, details);\n  }\n}\n\n/**\n * Erreur 422 - Entité non traitable\n * @extends BaseError\n */\nclass ValidationError extends BaseError {\n  /**\n   * Crée une nouvelle instance de ValidationError\n   * @param {Array} errors - Les erreurs de validation\n   * @param {Object} details - Détails supplémentaires sur l'erreur\n   */\n  constructor(errors = [], details = {}) {\n    super('ValidationError', 'Erreur de validation', 422, true, {\n      ...details,\n      errors,\n    });\n  }\n}\n\n/**\n * Erreur 429 - Trop de requêtes\n * @extends BaseError\n */\nclass TooManyRequestsError extends BaseError {\n  /**\n   * Crée une nouvelle instance de TooManyRequestsError\n   * @param {string} message - Le message d'erreur\n   * @param {Object} details - Détails supplémentaires sur l'erreur\n   */\n  constructor(message = 'Trop de requêtes', details = {}) {\n    super('TooManyRequestsError', message, 429, true, details);\n  }\n}\n\n/**\n * Erreur 500 - Erreur serveur\n * @extends BaseError\n */\nclass InternalServerError extends BaseError {\n  /**\n   * Crée une nouvelle instance de InternalServerError\n   * @param {string} message - Le message d'erreur\n   * @param {Object} details - Détails supplémentaires sur l'erreur\n   */\n  constructor(message = 'Erreur interne du serveur', details = {}) {\n    super('InternalServerError', message, 500, false, details);\n  }\n}\n\n/**\n * Middleware pour gérer les erreurs\n * @param {Error} err - L'erreur\n * @param {Object} req - La requête Express\n * @param {Object} res - La réponse Express\n * @param {Function} next - La fonction next\n */\nconst errorHandler = (err, req, res, next) => {\n  // Définit les valeurs par défaut pour les erreurs non gérées\n  if (!err.statusCode) {\n    err.statusCode = 500;\n    err.message = err.message || 'Erreur interne du serveur';\n  }\n\n  // Log l'erreur en production pour les erreurs non opérationnelles\n  if (process.env.NODE_ENV === 'production' && !err.isOperational) {\n    console.error('Erreur non gérée:', err);\n  }\n\n  // Envoie la réponse d'erreur\n  res.status(err.statusCode).json({\n    success: false,\n    message: err.message,\n    ...(process.env.NODE_ENV === 'development' && { stack: err.stack }),\n    ...(err.details && { details: err.details }),\n  });\n};\n\nmodule.exports = {\n  BaseError,\n  BadRequestError,\n  UnauthorizedError,\n  ForbiddenError,\n  NotFoundError,\n  ConflictError,\n  ValidationError,\n  TooManyRequestsError,\n  InternalServerError,\n  errorHandler,\n};\n"],"mappings":"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","ignoreList":[]}