{"version":3,"file":"config.js","names":["require","config","env","process","NODE_ENV","baseConfig","port","PORT","nodeEnv","appName","APP_NAME","appVersion","APP_VERSION","appDescription","apiUrl","API_URL","clientUrl","CLIENT_URL","jwtSecret","JWT_SECRET","jwtExpiresIn","JWT_EXPIRES_IN","jwtCookieExpiresIn","JWT_COOKIE_EXPIRES_IN","cookieSecret","COOKIE_SECRET","database","uri","MONGODB_URI","testUri","TEST_MONGODB_URI","options","useNewUrlParser","useUnifiedTopology","serverSelectionTimeoutMS","socketTimeoutMS","email","from","EMAIL_FROM","host","SMTP_HOST","SMTP_PORT","secure","SMTP_SECURE","auth","user","SMTP_USERNAME","pass","SMTP_PASSWORD","rateLimit","windowMs","parseInt","RATE_LIMIT_WINDOW_MS","max","RATE_LIMIT_MAX","security","passwordSaltRounds","PASSWORD_SALT_ROUNDS","resetPasswordExpiresIn","maxLoginAttempts","lockTime","logging","level","LOG_LEVEL","directory","LOG_DIR","maxSize","LOG_MAX_SIZE","maxFiles","LOG_MAX_FILES","cors","origin","methods","allowedHeaders","credentials","environmentConfigs","development","debug","test","production","ssl","sslValidate","sslCA","MONGODB_CA_CERT","authSource","MONGODB_USER","MONGODB_PASSWORD","requiredEnvVars","missingVars","filter","varName","length","console","error","join","exit","module","exports"],"sources":["../../src/config/config.js"],"sourcesContent":["require('dotenv').config();\n\nconst env = process.env.NODE_ENV || 'development';\n\nconst baseConfig = {\n  // Application\n  env,\n  port: process.env.PORT || 5000,\n  nodeEnv: process.env.NODE_ENV || 'development',\n  appName: process.env.APP_NAME || 'Gestion de Présence Médicale',\n  appVersion: process.env.APP_VERSION || '1.0.0',\n  appDescription: 'API pour la gestion des rendez-vous médicaux',\n  \n  // URL de l'application\n  apiUrl: process.env.API_URL || 'http://localhost:5000',\n  clientUrl: process.env.CLIENT_URL || 'http://localhost:3000',\n  \n  // JWT\n  jwtSecret: process.env.JWT_SECRET || 'votre_secret_jwt_tres_securise',\n  jwtExpiresIn: process.env.JWT_EXPIRES_IN || '1d', // 1 jour\n  jwtCookieExpiresIn: process.env.JWT_COOKIE_EXPIRES_IN || 30, // 30 jours\n  \n  // Cookies\n  cookieSecret: process.env.COOKIE_SECRET || 'votre_secret_cookie',\n  \n  // Base de données\n  database: {\n    uri: process.env.MONGODB_URI || 'mongodb://localhost:27017/presence-management',\n    testUri: process.env.TEST_MONGODB_URI || 'mongodb://localhost:27017/presence-management-test',\n    options: {\n      useNewUrlParser: true,\n      useUnifiedTopology: true,\n      serverSelectionTimeoutMS: 5000,\n      socketTimeoutMS: 45000,\n    },\n  },\n  \n  // Email\n  email: {\n    from: process.env.EMAIL_FROM || 'no-reply@presence-medicale.com',\n    host: process.env.SMTP_HOST || 'smtp.example.com',\n    port: process.env.SMTP_PORT || 587,\n    secure: process.env.SMTP_SECURE === 'true',\n    auth: {\n      user: process.env.SMTP_USERNAME || 'user',\n      pass: process.env.SMTP_PASSWORD || 'password',\n    },\n  },\n  \n  // Limitation de taux\n  rateLimit: {\n    windowMs: parseInt(process.env.RATE_LIMIT_WINDOW_MS, 10) || 15 * 60 * 1000, // 15 minutes\n    max: parseInt(process.env.RATE_LIMIT_MAX, 10) || 100, // Limite chaque IP à 100 requêtes par fenêtre\n  },\n  \n  // Sécurité\n  security: {\n    passwordSaltRounds: parseInt(process.env.PASSWORD_SALT_ROUNDS, 10) || 10,\n    resetPasswordExpiresIn: 3600000, // 1 heure en millisecondes\n    maxLoginAttempts: 5,\n    lockTime: 15 * 60 * 1000, // 15 minutes en millisecondes\n  },\n  \n  // Logging\n  logging: {\n    level: process.env.LOG_LEVEL || 'info',\n    directory: process.env.LOG_DIR || 'logs',\n    maxSize: process.env.LOG_MAX_SIZE || '20m',\n    maxFiles: process.env.LOG_MAX_FILES || '14d',\n  },\n  \n  // CORS\n  cors: {\n    origin: process.env.CLIENT_URL || 'http://localhost:3000',\n    methods: ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS'],\n    allowedHeaders: ['Content-Type', 'Authorization'],\n    credentials: true,\n  },\n};\n\nconst environmentConfigs = {\n  development: {\n    // Configuration spécifique au développement\n    logging: {\n      level: 'debug',\n    },\n    database: {\n      debug: true,\n    },\n  },\n  test: {\n    // Configuration spécifique aux tests\n    port: 0, // Utilise un port aléatoire\n    database: {\n      uri: process.env.TEST_MONGODB_URI || 'mongodb://localhost:27017/presence-management-test',\n    },\n  },\n  production: {\n    // Configuration spécifique à la production\n    logging: {\n      level: 'info',\n    },\n    database: {\n      uri: process.env.MONGODB_URI,\n      options: {\n        ...baseConfig.database.options,\n        ssl: true,\n        sslValidate: true,\n        sslCA: process.env.MONGODB_CA_CERT,\n        authSource: 'admin',\n        user: process.env.MONGODB_USER,\n        pass: process.env.MONGODB_PASSWORD,\n      },\n    },\n  },\n};\n\n// Fusionner la configuration de base avec la configuration spécifique à l'environnement\nconst config = {\n  ...baseConfig,\n  ...(environmentConfigs[env] || {}),\n};\n\n// Vérifier les variables d'environnement requises en production\nif (env === 'production') {\n  const requiredEnvVars = [\n    'MONGODB_URI',\n    'JWT_SECRET',\n    'EMAIL_FROM',\n    'SMTP_HOST',\n    'SMTP_USERNAME',\n    'SMTP_PASSWORD',\n  ];\n\n  const missingVars = requiredEnvVars.filter((varName) => !process.env[varName]);\n\n  if (missingVars.length > 0) {\n    console.error(\n      `Erreur: Les variables d'environnement suivantes sont requises en production: ${missingVars.join(\n        ', '\n      )}`\n    );\n    process.exit(1);\n  }\n}\n\nmodule.exports = config;\n"],"mappings":"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","ignoreList":[]}