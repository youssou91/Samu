{"version":3,"file":"database.js","names":["mongoose","require","logger","options","useNewUrlParser","useUnifiedTopology","serverSelectionTimeoutMS","socketTimeoutMS","family","maxPoolSize","MONGODB_URI","process","env","NODE_ENV","TEST_MONGODB_URI","connectDB","connection","readyState","info","replace","on","db","databaseName","err","error","message","warn","close","exit","connect","closeDB","clearDB","Error","dropDatabase","module","exports"],"sources":["../../src/config/database.js"],"sourcesContent":["const mongoose = require('mongoose');\nconst logger = require('./logger');\n\n// Options de connexion MongoDB\nconst options = {\n  useNewUrlParser: true,\n  useUnifiedTopology: true,\n  serverSelectionTimeoutMS: 5000, // Timeout après 5s au lieu de 30s\n  socketTimeoutMS: 45000, // Fermeture des sockets inactifs après 45s\n  family: 4, // Utilisation d'IPv4, évite les problèmes avec IPv6\n  maxPoolSize: 10, // Nombre maximum de connexions dans le pool\n  serverSelectionTimeoutMS: 5000, // Timeout pour la sélection du serveur\n  socketTimeoutMS: 45000, // Timeout pour les opérations sur le socket\n};\n\n// URI de connexion MongoDB\nconst MONGODB_URI =\n  process.env.NODE_ENV === 'test'\n    ? process.env.TEST_MONGODB_URI || 'mongodb://localhost:27017/presence-management-test'\n    : process.env.MONGODB_URI || 'mongodb://localhost:27017/presence-management';\n\n/**\n * Établit une connexion à la base de données MongoDB\n * @returns {Promise<void>}\n */\nconst connectDB = async () => {\n  try {\n    // Vérifier si une connexion existe déjà\n    if (mongoose.connection.readyState === 1) {\n      logger.info('Utilisation de la connexion MongoDB existante');\n      return;\n    }\n\n    logger.info(`Tentative de connexion à MongoDB: ${MONGODB_URI.replace(/:[^:]*@/, ':***@')}`);\n    \n    // Événements de connexion\n    mongoose.connection.on('connected', () => {\n      logger.info(`Connecté à MongoDB avec succès sur la base de données: ${mongoose.connection.db.databaseName}`);\n    });\n\n    mongoose.connection.on('error', (err) => {\n      logger.error(`Erreur de connexion MongoDB: ${err.message}`);\n    });\n\n    mongoose.connection.on('disconnected', () => {\n      logger.warn('Déconnecté de MongoDB');\n    });\n\n    // Gestion de la fermeture de l'application\n    process.on('SIGINT', async () => {\n      try {\n        await mongoose.connection.close();\n        logger.info('Connexion MongoDB fermée suite à l\\'arrêt de l\\'application');\n        process.exit(0);\n      } catch (err) {\n        logger.error('Erreur lors de la fermeture de la connexion MongoDB:', err);\n        process.exit(1);\n      }\n    });\n\n    // Établir la connexion\n    await mongoose.connect(MONGODB_URI, options);\n    \n  } catch (error) {\n    logger.error(`Échec de la connexion à MongoDB: ${error.message}`);\n    // Sortir avec un code d'erreur en cas d'échec critique\n    process.exit(1);\n  }\n};\n\n/**\n * Ferme la connexion à la base de données MongoDB\n * @returns {Promise<void>}\n */\nconst closeDB = async () => {\n  try {\n    if (mongoose.connection.readyState === 1) {\n      await mongoose.connection.close();\n      logger.info('Connexion MongoDB fermée avec succès');\n    }\n  } catch (error) {\n    logger.error('Erreur lors de la fermeture de la connexion MongoDB:', error);\n    throw error;\n  }\n};\n\n/**\n * Vide la base de données (uniquement en environnement de test)\n * @returns {Promise<void>}\n */\nconst clearDB = async () => {\n  if (process.env.NODE_ENV !== 'test') {\n    throw new Error('clearDB ne peut être appelée qu\\'en environnement de test');\n  }\n  \n  try {\n    await mongoose.connection.dropDatabase();\n    logger.info('Base de données vidée avec succès');\n  } catch (error) {\n    logger.error('Erreur lors du vidage de la base de données:', error);\n    throw error;\n  }\n};\n\nmodule.exports = {\n  connectDB,\n  closeDB,\n  clearDB,\n  connection: mongoose.connection,\n};\n"],"mappings":"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","ignoreList":[]}