{"version":3,"file":"upload.js","names":["multer","require","path","fs","v4","uuidv4","logger","BadRequestError","uploadDir","join","__dirname","existsSync","mkdirSync","recursive","info","storage","diskStorage","destination","req","file","cb","filename","uniqueSuffix","Date","now","Math","round","random","ext","extname","originalname","toLowerCase","fieldname","fileFilter","filetypes","test","mimetype","error","upload","limits","fileSize","handleUploadError","err","res","next","MulterError","code","message","deleteFile","filePath","fullPath","unlink","deleteFiles","filePaths","Array","isArray","forEach","requireFile","fieldName","requireFiles","minCount","files","length","uploadSingle","single","uploadMultiple","maxCount","array","uploadFields","fields","module","exports"],"sources":["../../src/middleware/upload.js"],"sourcesContent":["const multer = require('multer');\nconst path = require('path');\nconst fs = require('fs');\nconst { v4: uuidv4 } = require('uuid');\nconst logger = require('../config/logger');\nconst { BadRequestError } = require('../utils/errors');\n\n// Créer le répertoire de téléchargement s'il n'existe pas\nconst uploadDir = path.join(__dirname, '../../uploads');\nif (!fs.existsSync(uploadDir)) {\n  fs.mkdirSync(uploadDir, { recursive: true });\n  logger.info(`Répertoire de téléchargement créé: ${uploadDir}`);\n}\n\n// Configuration du stockage\nconst storage = multer.diskStorage({\n  destination: (req, file, cb) => {\n    cb(null, uploadDir);\n  },\n  filename: (req, file, cb) => {\n    const uniqueSuffix = `${Date.now()}-${Math.round(Math.random() * 1e9)}`;\n    const ext = path.extname(file.originalname).toLowerCase();\n    cb(null, `${file.fieldname}-${uniqueSuffix}${ext}`);\n  },\n});\n\n// Filtre de fichiers\nconst fileFilter = (req, file, cb) => {\n  const filetypes = /jpeg|jpg|png|gif|pdf|doc|docx|txt/;\n  const extname = filetypes.test(path.extname(file.originalname).toLowerCase());\n  const mimetype = filetypes.test(file.mimetype);\n\n  if (mimetype && extname) {\n    return cb(null, true);\n  }\n  \n  const error = new BadRequestError(\n    'Type de fichier non pris en charge. Formats acceptés: jpeg, jpg, png, gif, pdf, doc, docx, txt.'\n  );\n  \n  cb(error, false);\n};\n\n// Configuration de Multer\nconst upload = multer({\n  storage,\n  fileFilter,\n  limits: {\n    fileSize: 5 * 1024 * 1024, // 5MB max file size\n  },\n});\n\n// Middleware pour gérer les erreurs de téléchargement\nconst handleUploadError = (err, req, res, next) => {\n  if (err instanceof multer.MulterError) {\n    // Une erreur Multer s'est produite lors du téléchargement\n    if (err.code === 'LIMIT_FILE_SIZE') {\n      return next(new BadRequestError('La taille du fichier dépasse la limite autorisée (5MB)'));\n    }\n    \n    if (err.code === 'LIMIT_FILE_COUNT') {\n      return next(new BadRequestError('Trop de fichiers téléchargés'));\n    }\n    \n    if (err.code === 'LIMIT_UNEXPECTED_FILE') {\n      return next(new BadRequestError('Champ de fichier inattendu'));\n    }\n    \n    return next(new BadRequestError(`Erreur lors du téléchargement du fichier: ${err.message}`));\n  } else if (err) {\n    // Une erreur inattendue s'est produite\n    return next(err);\n  }\n  \n  next();\n};\n\n// Middleware pour supprimer un fichier\nconst deleteFile = (filePath) => {\n  const fullPath = path.join(uploadDir, filePath);\n  \n  fs.unlink(fullPath, (err) => {\n    if (err) {\n      logger.error(`Erreur lors de la suppression du fichier ${filePath}:`, err);\n      return false;\n    }\n    \n    logger.info(`Fichier supprimé avec succès: ${filePath}`);\n    return true;\n  });\n};\n\n// Middleware pour supprimer plusieurs fichiers\nconst deleteFiles = (filePaths) => {\n  if (!Array.isArray(filePaths)) {\n    filePaths = [filePaths];\n  }\n  \n  filePaths.forEach(filePath => {\n    if (filePath) {\n      deleteFile(filePath);\n    }\n  });\n};\n\n// Middleware pour valider la présence d'un fichier\nconst requireFile = (fieldName) => {\n  return (req, res, next) => {\n    if (!req.file) {\n      return next(new BadRequestError(`Le fichier '${fieldName}' est requis`));\n    }\n    \n    next();\n  };\n};\n\n// Middleware pour valider la présence de plusieurs fichiers\nconst requireFiles = (fieldName, minCount = 1) => {\n  return (req, res, next) => {\n    if (!req.files || !req.files[fieldName] || req.files[fieldName].length < minCount) {\n      return next(new BadRequestError(`Au moins ${minCount} fichier(s) '${fieldName}' est/sont requis`));\n    }\n    \n    next();\n  };\n};\n\n// Middleware pour télécharger un seul fichier\nconst uploadSingle = (fieldName) => {\n  return [\n    upload.single(fieldName),\n    handleUploadError,\n  ];\n};\n\n// Middleware pour télécharger plusieurs fichiers\nconst uploadMultiple = (fieldName, maxCount = 5) => {\n  return [\n    upload.array(fieldName, maxCount),\n    handleUploadError,\n  ];\n};\n\n// Middleware pour télécharger des fichiers avec des champs spécifiques\nconst uploadFields = (fields) => {\n  return [\n    upload.fields(fields),\n    handleUploadError,\n  ];\n};\n\nmodule.exports = {\n  upload,\n  uploadSingle,\n  uploadMultiple,\n  uploadFields,\n  deleteFile,\n  deleteFiles,\n  requireFile,\n  requireFiles,\n  uploadDir,\n};\n"],"mappings":"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","ignoreList":[]}