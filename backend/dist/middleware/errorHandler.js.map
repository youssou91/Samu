{"version":3,"file":"errorHandler.js","names":["logger","require","BadRequestError","UnauthorizedError","ForbiddenError","NotFoundError","ConflictError","ValidationError","TooManyRequestsError","InternalServerError","errorHandler","err","req","res","next","statusCode","status","process","env","NODE_ENV","error","message","stack","name","isOperational","json","success","errors","details","notFoundHandler","originalUrl","joiErrorHandler","isJoi","map","detail","field","path","join","type","context","duplicateKeyErrorHandler","code","Object","keys","keyValue","value","validationErrorHandler","values","el","jwtErrorHandler","rateLimitErrorHandler","module","exports"],"sources":["../../src/middleware/errorHandler.js"],"sourcesContent":["const logger = require('../config/logger');\nconst {\n  BadRequestError,\n  UnauthorizedError,\n  ForbiddenError,\n  NotFoundError,\n  ConflictError,\n  ValidationError,\n  TooManyRequestsError,\n  InternalServerError,\n} = require('../utils/errors');\n\n/**\n * Gestionnaire d'erreurs global pour Express\n * @param {Error} err - L'erreur\n * @param {Object} req - La requête Express\n * @param {Object} res - La réponse Express\n * @param {Function} next - La fonction next\n */\nconst errorHandler = (err, req, res, next) => {\n  // Définir les valeurs par défaut pour les erreurs non gérées\n  err.statusCode = err.statusCode || 500;\n  err.status = err.status || 'error';\n\n  // Journalisation des erreurs en développement\n  if (process.env.NODE_ENV === 'development') {\n    logger.error('Erreur:', {\n      message: err.message,\n      stack: err.stack,\n      name: err.name,\n    });\n  } else if (process.env.NODE_ENV === 'production') {\n    // En production, ne pas envoyer les détails des erreurs inattendues\n    if (!err.isOperational) {\n      logger.error('Erreur non gérée:', {\n        message: err.message,\n        stack: err.stack,\n        name: err.name,\n      });\n      \n      // Remplacer l'erreur par un message générique\n      err = new InternalServerError('Une erreur est survenue');\n    }\n  }\n\n  // Répondre au client\n  res.status(err.statusCode).json({\n    success: false,\n    status: err.status,\n    message: err.message,\n    ...(process.env.NODE_ENV === 'development' && {\n      error: err,\n      stack: err.stack,\n    }),\n    ...(err.errors && { errors: err.errors }),\n    ...(err.details && { details: err.details }),\n  });\n};\n\n/**\n * Gestionnaire pour les routes non trouvées (404)\n * @param {Object} req - La requête Express\n * @param {Object} res - La réponse Express\n * @param {Function} next - La fonction next\n */\nconst notFoundHandler = (req, res, next) => {\n  next(new NotFoundError(`Impossible de trouver ${req.originalUrl} sur ce serveur`));\n};\n\n/**\n * Gestionnaire pour les erreurs de validation Joi\n * @param {Error} err - L'erreur de validation\n * @param {Object} req - La requête Express\n * @param {Object} res - La réponse Express\n * @param {Function} next - La fonction next\n */\nconst joiErrorHandler = (err, req, res, next) => {\n  if (err && err.error && err.error.isJoi) {\n    const errors = err.error.details.map(detail => ({\n      field: detail.path.join('.'),\n      message: detail.message,\n      type: detail.type,\n      context: detail.context,\n    }));\n    \n    return next(new ValidationError(errors));\n  }\n  \n  next(err);\n};\n\n/**\n * Gestionnaire pour les erreurs de duplication de clé MongoDB\n * @param {Error} err - L'erreur\n * @param {Object} req - La requête Express\n * @param {Object} res - La réponse Express\n * @param {Function} next - La fonction next\n */\nconst duplicateKeyErrorHandler = (err, req, res, next) => {\n  if (err.code === 11000) {\n    const field = Object.keys(err.keyValue)[0];\n    const value = err.keyValue[field];\n    const message = `La valeur '${value}' pour le champ '${field}' est déjà utilisée.`;\n    \n    return next(new ConflictError(message, { field, value }));\n  }\n  \n  next(err);\n};\n\n/**\n * Gestionnaire pour les erreurs de validation MongoDB\n * @param {Error} err - L'erreur\n * @param {Object} req - La requête Express\n * @param {Object} res - La réponse Express\n * @param {Function} next - La fonction next\n */\nconst validationErrorHandler = (err, req, res, next) => {\n  if (err.name === 'ValidationError') {\n    const errors = Object.values(err.errors).map(el => ({\n      field: el.path,\n      message: el.message,\n      value: el.value,\n    }));\n    \n    return next(new ValidationError(errors));\n  }\n  \n  next(err);\n};\n\n/**\n * Gestionnaire pour les erreurs de token JWT invalide\n * @param {Error} err - L'erreur\n * @param {Object} req - La requête Express\n * @param {Object} res - La réponse Express\n * @param {Function} next - La fonction next\n */\nconst jwtErrorHandler = (err, req, res, next) => {\n  if (err.name === 'JsonWebTokenError') {\n    return next(new UnauthorizedError('Token invalide. Veuillez vous reconnecter.'));\n  }\n  \n  if (err.name === 'TokenExpiredError') {\n    return next(new UnauthorizedError('Votre session a expiré. Veuillez vous reconnecter.'));\n  }\n  \n  next(err);\n};\n\n/**\n * Gestionnaire pour les erreurs de limite de taux\n * @param {Error} err - L'erreur\n * @param {Object} req - La requête Express\n * @param {Object} res - La réponse Express\n * @param {Function} next - La fonction next\n */\nconst rateLimitErrorHandler = (err, req, res, next) => {\n  if (err.name === 'RateLimitError') {\n    return next(new TooManyRequestsError('Trop de requêtes. Veuillez réessayer plus tard.'));\n  }\n  \n  next(err);\n};\n\nmodule.exports = {\n  errorHandler,\n  notFoundHandler,\n  joiErrorHandler,\n  duplicateKeyErrorHandler,\n  validationErrorHandler,\n  jwtErrorHandler,\n  rateLimitErrorHandler,\n};\n"],"mappings":"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","ignoreList":[]}