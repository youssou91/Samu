{"version":3,"file":"cache.js","names":["NodeCache","require","logger","defaultCache","stdTTL","checkperiod","useClones","deleteOnExpire","cacheMiddleware","duration","keyGenerator","req","res","next","method","cacheKey","originalUrl","url","cachedResponse","get","debug","isError","status","json","success","message","details","originalSend","body","statusCode","set","cacheError","error","clearCache","key","del","info","flushAll","clearCacheByRoute","clearCacheByPrefix","prefix","keys","keysToDelete","filter","startsWith","length","generateCacheKey","query","params","user","userId","id","queryString","JSON","stringify","paramsString","module","exports","cache"],"sources":["../../src/middleware/cache.js"],"sourcesContent":["const NodeCache = require('node-cache');\nconst logger = require('../config/logger');\n\n// Configuration du cache par défaut (TTL: 10 minutes, vérification des éléments expirés toutes les 5 minutes)\nconst defaultCache = new NodeCache({\n  stdTTL: 600, // Temps de vie par défaut en secondes (10 minutes)\n  checkperiod: 300, // Vérification des éléments expirés toutes les 5 minutes\n  useClones: false, // Pour les performances\n  deleteOnExpire: true, // Supprimer automatiquement les éléments expirés\n});\n\n// Middleware pour mettre en cache les réponses\nconst cacheMiddleware = (duration, keyGenerator) => {\n  return (req, res, next) => {\n    // Ignorer les requêtes autres que GET pour le cache\n    if (req.method !== 'GET') {\n      return next();\n    }\n\n    // Générer une clé de cache unique pour cette requête\n    const cacheKey = keyGenerator \n      ? keyGenerator(req) \n      : `cache_${req.originalUrl || req.url}`;\n\n    // Vérifier si la réponse est en cache\n    const cachedResponse = defaultCache.get(cacheKey);\n    \n    if (cachedResponse) {\n      logger.debug(`Cache hit for key: ${cacheKey}`);\n      \n      // Vérifier si la réponse est une erreur\n      if (cachedResponse.isError) {\n        return res.status(cachedResponse.status).json({\n          success: false,\n          message: cachedResponse.message,\n          ...(cachedResponse.details && { details: cachedResponse.details }),\n        });\n      }\n      \n      // Renvoyer la réponse mise en cache\n      return res.json(cachedResponse);\n    }\n\n    // Sauvegarder la méthode originale de réponse\n    const originalSend = res.json;\n    \n    // Remplacer la méthode json pour intercepter la réponse\n    res.json = (body) => {\n      // Mettre en cache la réponse si le statut est 200\n      if (res.statusCode === 200) {\n        logger.debug(`Caching response for key: ${cacheKey} (${duration}s)`);\n        defaultCache.set(cacheKey, body, duration || 600); // Utiliser la durée fournie ou 10 minutes par défaut\n      }\n      \n      // Restaurer la méthode originale et envoyer la réponse\n      res.json = originalSend;\n      return res.json(body);\n    };\n    \n    // Passer au middleware suivant\n    next();\n  };\n};\n\n// Middleware pour mettre en cache les erreurs\nconst cacheError = (error, req, res, next) => {\n  const cacheKey = `error_${req.originalUrl || req.url}`;\n  \n  // Mettre en cache les erreurs 4xx pendant 1 minute\n  if (error.statusCode >= 400 && error.statusCode < 500) {\n    logger.debug(`Caching error response for key: ${cacheKey} (60s)`);\n    \n    defaultCache.set(cacheKey, {\n      isError: true,\n      status: error.statusCode,\n      message: error.message,\n      details: error.details,\n    }, 60); // 1 minute de cache pour les erreurs\n  }\n  \n  next(error);\n};\n\n// Fonction pour effacer manuellement le cache\nconst clearCache = (key) => {\n  if (key) {\n    defaultCache.del(key);\n    logger.info(`Cache cleared for key: ${key}`);\n  } else {\n    defaultCache.flushAll();\n    logger.info('All cache cleared');\n  }\n};\n\n// Middleware pour effacer le cache pour une route spécifique\nconst clearCacheByRoute = (req, res, next) => {\n  const cacheKey = `cache_${req.originalUrl || req.url}`;\n  clearCache(cacheKey);\n  next();\n};\n\n// Middleware pour effacer le cache par préfixe\nconst clearCacheByPrefix = (prefix) => {\n  return (req, res, next) => {\n    const keys = defaultCache.keys();\n    const keysToDelete = keys.filter(key => key.startsWith(prefix));\n    \n    if (keysToDelete.length > 0) {\n      defaultCache.del(keysToDelete);\n      logger.info(`Cache cleared for prefix: ${prefix} (${keysToDelete.length} keys)`);\n    }\n    \n    next();\n  };\n};\n\n// Fonction utilitaire pour générer une clé de cache basée sur les paramètres de requête\nconst generateCacheKey = (req) => {\n  const { originalUrl, query, params, user } = req;\n  const userId = user ? user.id : 'anonymous';\n  const queryString = JSON.stringify(query);\n  const paramsString = JSON.stringify(params);\n  \n  return `cache_${userId}_${originalUrl}_${queryString}_${paramsString}`;\n};\n\nmodule.exports = {\n  cache: defaultCache,\n  cacheMiddleware,\n  cacheError,\n  clearCache,\n  clearCacheByRoute,\n  clearCacheByPrefix,\n  generateCacheKey,\n};\n"],"mappings":"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","ignoreList":[]}