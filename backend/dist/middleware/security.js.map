{"version":3,"file":"security.js","names":["helmet","require","rateLimit","mongoSanitize","xss","hpp","cors","config","configureHelmet","contentSecurityPolicy","directives","defaultSrc","scriptSrc","styleSrc","imgSrc","fontSrc","connectSrc","frameSrc","objectSrc","upgradeInsecureRequests","crossOriginEmbedderPolicy","crossOriginResourcePolicy","policy","dnsPrefetchControl","allow","frameguard","action","hidePoweredBy","hsts","maxAge","includeSubDomains","ieNoOpen","noCache","noSniff","permittedCrossDomainPolicies","permittedPolicies","referrerPolicy","xssFilter","configureRateLimit","windowMs","max","message","standardHeaders","legacyHeaders","configureCors","corsOptions","origin","callback","allowedOrigins","clientUrl","includes","endsWith","Error","methods","allowedHeaders","credentials","optionsSuccessStatus","configureMongoSanitize","onSanitize","req","key","console","warn","originalUrl","replaceWith","configureXss","configureHpp","whitelist","configureSecurityHeaders","res","next","setHeader","limitBodySize","limit","contentLength","headers","parseInt","status","json","success","module","exports"],"sources":["../../src/middleware/security.js"],"sourcesContent":["const helmet = require('helmet');\nconst rateLimit = require('express-rate-limit');\nconst mongoSanitize = require('express-mongo-sanitize');\nconst xss = require('xss-clean');\nconst hpp = require('hpp');\nconst cors = require('cors');\nconst config = require('../config/config');\n\n/**\n * Configuration de la sécurité HTTP avec Helmet\n */\nconst configureHelmet = () => {\n  return helmet({\n    contentSecurityPolicy: {\n      directives: {\n        defaultSrc: [\"'self'\"],\n        scriptSrc: [\"'self'\", \"'unsafe-inline'\", \"'unsafe-eval'\"],\n        styleSrc: [\"'self'\", \"'unsafe-inline'\"],\n        imgSrc: [\"'self'\", 'data:', 'blob:'],\n        fontSrc: [\"'self'\", 'data:'],\n        connectSrc: [\"'self'\", 'https://api.mapbox.com'],\n        frameSrc: [\"'self'\"],\n        objectSrc: [\"'none'\"],\n        upgradeInsecureRequests: [],\n      },\n    },\n    crossOriginEmbedderPolicy: false,\n    crossOriginResourcePolicy: { policy: 'cross-origin' },\n    dnsPrefetchControl: { allow: false },\n    frameguard: { action: 'deny' },\n    hidePoweredBy: true,\n    hsts: { maxAge: 15552000, includeSubDomains: true },\n    ieNoOpen: true,\n    noCache: true,\n    noSniff: true,\n    permittedCrossDomainPolicies: { permittedPolicies: 'none' },\n    referrerPolicy: { policy: 'no-referrer' },\n    xssFilter: true,\n  });\n};\n\n/**\n * Configuration de la limitation de taux\n */\nconst configureRateLimit = () => {\n  return rateLimit({\n    windowMs: config.rateLimit.windowMs,\n    max: config.rateLimit.max,\n    message: 'Trop de requêtes depuis cette adresse IP. Veuillez réessayer plus tard.',\n    standardHeaders: true,\n    legacyHeaders: false,\n  });\n};\n\n/**\n * Configuration CORS\n */\nconst configureCors = () => {\n  const corsOptions = {\n    origin: (origin, callback) => {\n      // Autoriser les requêtes sans origine (comme les applications mobiles ou Postman)\n      if (!origin) return callback(null, true);\n      \n      // Vérifier si l'origine est autorisée\n      const allowedOrigins = [\n        config.clientUrl,\n        'http://localhost:3000',\n        'http://localhost:5000',\n        'http://127.0.0.1:3000',\n        'http://127.0.0.1:5000',\n      ];\n      \n      if (allowedOrigins.includes(origin) || origin.endsWith('.vercel.app')) {\n        callback(null, true);\n      } else {\n        callback(new Error('Not allowed by CORS'));\n      }\n    },\n    methods: ['GET', 'POST', 'PUT', 'PATCH', 'DELETE', 'OPTIONS'],\n    allowedHeaders: [\n      'Content-Type',\n      'Authorization',\n      'X-Requested-With',\n      'Accept',\n      'Origin',\n    ],\n    credentials: true,\n    optionsSuccessStatus: 200,\n  };\n  \n  return cors(corsOptions);\n};\n\n/**\n * Configuration de la protection contre les injections NoSQL\n */\nconst configureMongoSanitize = () => {\n  return mongoSanitize({\n    onSanitize: ({ req, key }) => {\n      console.warn(`Requête avec clé non autorisée: ${key} sur ${req.originalUrl}`);\n    },\n    replaceWith: '_',\n  });\n};\n\n/**\n * Configuration de la protection contre les attaques XSS\n */\nconst configureXss = () => {\n  return xss();\n};\n\n/**\n * Configuration de la protection contre la pollution des paramètres HTTP\n */\nconst configureHpp = () => {\n  return hpp({\n    whitelist: [\n      'duration',\n      'ratingsQuantity',\n      'ratingsAverage',\n      'maxGroupSize',\n      'difficulty',\n      'price',\n    ],\n  });\n};\n\n/**\n * Configuration de la sécurité des en-têtes\n */\nconst configureSecurityHeaders = (req, res, next) => {\n  // Protège contre les attaques de type clickjacking\n  res.setHeader('X-Frame-Options', 'DENY');\n  \n  // Active le filtre XSS dans les navigateurs\n  res.setHeader('X-XSS-Protection', '1; mode=block');\n  \n  // Empêche le navigateur de détecter automatiquement les types MIME\n  res.setHeader('X-Content-Type-Options', 'nosniff');\n  \n  // Contrôle strict de la politique de référencement\n  res.setHeader('Referrer-Policy', 'strict-origin-when-cross-origin');\n  \n  // Désactive la mise en cache côté client\n  res.setHeader('Cache-Control', 'no-store');\n  res.setHeader('Pragma', 'no-cache');\n  \n  next();\n};\n\n/**\n * Middleware pour limiter la taille du corps des requêtes\n * @param {number} limit - Taille maximale en octets (par défaut: 10KB)\n */\nconst limitBodySize = (limit = '10kb') => {\n  return (req, res, next) => {\n    const contentLength = req.headers['content-length'];\n    \n    if (contentLength && parseInt(contentLength, 10) > limit) {\n      return res.status(413).json({\n        success: false,\n        message: `La taille du corps de la requête ne doit pas dépasser ${limit}`,\n      });\n    }\n    \n    next();\n  };\n};\n\nmodule.exports = {\n  configureHelmet,\n  configureRateLimit,\n  configureCors,\n  configureMongoSanitize,\n  configureXss,\n  configureHpp,\n  configureSecurityHeaders,\n  limitBodySize,\n};\n"],"mappings":"aAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMC,SAAS,GAAGD,OAAO,CAAC,oBAAoB,CAAC;AAC/C,MAAME,aAAa,GAAGF,OAAO,CAAC,wBAAwB,CAAC;AACvD,MAAMG,GAAG,GAAGH,OAAO,CAAC,WAAW,CAAC;AAChC,MAAMI,GAAG,GAAGJ,OAAO,CAAC,KAAK,CAAC;AAC1B,MAAMK,IAAI,GAAGL,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMM,MAAM,GAAGN,OAAO,CAAC,kBAAkB,CAAC;;AAE1C;AACA;AACA;AACA,MAAMO,eAAe,GAAGA,CAAA,KAAM;EAC5B,OAAOR,MAAM,CAAC;IACZS,qBAAqB,EAAE;MACrBC,UAAU,EAAE;QACVC,UAAU,EAAE,CAAC,QAAQ,CAAC;QACtBC,SAAS,EAAE,CAAC,QAAQ,EAAE,iBAAiB,EAAE,eAAe,CAAC;QACzDC,QAAQ,EAAE,CAAC,QAAQ,EAAE,iBAAiB,CAAC;QACvCC,MAAM,EAAE,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,CAAC;QACpCC,OAAO,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC;QAC5BC,UAAU,EAAE,CAAC,QAAQ,EAAE,wBAAwB,CAAC;QAChDC,QAAQ,EAAE,CAAC,QAAQ,CAAC;QACpBC,SAAS,EAAE,CAAC,QAAQ,CAAC;QACrBC,uBAAuB,EAAE;MAC3B;IACF,CAAC;IACDC,yBAAyB,EAAE,KAAK;IAChCC,yBAAyB,EAAE,EAAEC,MAAM,EAAE,cAAc,CAAC,CAAC;IACrDC,kBAAkB,EAAE,EAAEC,KAAK,EAAE,KAAK,CAAC,CAAC;IACpCC,UAAU,EAAE,EAAEC,MAAM,EAAE,MAAM,CAAC,CAAC;IAC9BC,aAAa,EAAE,IAAI;IACnBC,IAAI,EAAE,EAAEC,MAAM,EAAE,QAAQ,EAAEC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IACnDC,QAAQ,EAAE,IAAI;IACdC,OAAO,EAAE,IAAI;IACbC,OAAO,EAAE,IAAI;IACbC,4BAA4B,EAAE,EAAEC,iBAAiB,EAAE,MAAM,CAAC,CAAC;IAC3DC,cAAc,EAAE,EAAEd,MAAM,EAAE,aAAa,CAAC,CAAC;IACzCe,SAAS,EAAE;EACb,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA,MAAMC,kBAAkB,GAAGA,CAAA,KAAM;EAC/B,OAAOpC,SAAS,CAAC;IACfqC,QAAQ,EAAEhC,MAAM,CAACL,SAAS,CAACqC,QAAQ;IACnCC,GAAG,EAAEjC,MAAM,CAACL,SAAS,CAACsC,GAAG;IACzBC,OAAO,EAAE,yEAAyE;IAClFC,eAAe,EAAE,IAAI;IACrBC,aAAa,EAAE;EACjB,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,MAAMC,WAAW,GAAG;IAClBC,MAAM,EAAEA,CAACA,MAAM,EAAEC,QAAQ,KAAK;MAC5B;MACA,IAAI,CAACD,MAAM,EAAE,OAAOC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;;MAExC;MACA,MAAMC,cAAc,GAAG;MACrBzC,MAAM,CAAC0C,SAAS;MAChB,uBAAuB;MACvB,uBAAuB;MACvB,uBAAuB;MACvB,uBAAuB,CACxB;;;MAED,IAAID,cAAc,CAACE,QAAQ,CAACJ,MAAM,CAAC,IAAIA,MAAM,CAACK,QAAQ,CAAC,aAAa,CAAC,EAAE;QACrEJ,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;MACtB,CAAC,MAAM;QACLA,QAAQ,CAAC,IAAIK,KAAK,CAAC,qBAAqB,CAAC,CAAC;MAC5C;IACF,CAAC;IACDC,OAAO,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,SAAS,CAAC;IAC7DC,cAAc,EAAE;IACd,cAAc;IACd,eAAe;IACf,kBAAkB;IAClB,QAAQ;IACR,QAAQ,CACT;;IACDC,WAAW,EAAE,IAAI;IACjBC,oBAAoB,EAAE;EACxB,CAAC;;EAED,OAAOlD,IAAI,CAACuC,WAAW,CAAC;AAC1B,CAAC;;AAED;AACA;AACA;AACA,MAAMY,sBAAsB,GAAGA,CAAA,KAAM;EACnC,OAAOtD,aAAa,CAAC;IACnBuD,UAAU,EAAEA,CAAC,EAAEC,GAAG,EAAEC,GAAG,CAAC,CAAC,KAAK;MAC5BC,OAAO,CAACC,IAAI,CAAC,mCAAmCF,GAAG,QAAQD,GAAG,CAACI,WAAW,EAAE,CAAC;IAC/E,CAAC;IACDC,WAAW,EAAE;EACf,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EACzB,OAAO7D,GAAG,CAAC,CAAC;AACd,CAAC;;AAED;AACA;AACA;AACA,MAAM8D,YAAY,GAAGA,CAAA,KAAM;EACzB,OAAO7D,GAAG,CAAC;IACT8D,SAAS,EAAE;IACT,UAAU;IACV,iBAAiB;IACjB,gBAAgB;IAChB,cAAc;IACd,YAAY;IACZ,OAAO;;EAEX,CAAC,CAAC;AACJ,CAAC;;AAED;AACA;AACA;AACA,MAAMC,wBAAwB,GAAGA,CAACT,GAAG,EAAEU,GAAG,EAAEC,IAAI,KAAK;EACnD;EACAD,GAAG,CAACE,SAAS,CAAC,iBAAiB,EAAE,MAAM,CAAC;;EAExC;EACAF,GAAG,CAACE,SAAS,CAAC,kBAAkB,EAAE,eAAe,CAAC;;EAElD;EACAF,GAAG,CAACE,SAAS,CAAC,wBAAwB,EAAE,SAAS,CAAC;;EAElD;EACAF,GAAG,CAACE,SAAS,CAAC,iBAAiB,EAAE,iCAAiC,CAAC;;EAEnE;EACAF,GAAG,CAACE,SAAS,CAAC,eAAe,EAAE,UAAU,CAAC;EAC1CF,GAAG,CAACE,SAAS,CAAC,QAAQ,EAAE,UAAU,CAAC;;EAEnCD,IAAI,CAAC,CAAC;AACR,CAAC;;AAED;AACA;AACA;AACA;AACA,MAAME,aAAa,GAAGA,CAACC,KAAK,GAAG,MAAM,KAAK;EACxC,OAAO,CAACd,GAAG,EAAEU,GAAG,EAAEC,IAAI,KAAK;IACzB,MAAMI,aAAa,GAAGf,GAAG,CAACgB,OAAO,CAAC,gBAAgB,CAAC;;IAEnD,IAAID,aAAa,IAAIE,QAAQ,CAACF,aAAa,EAAE,EAAE,CAAC,GAAGD,KAAK,EAAE;MACxD,OAAOJ,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1BC,OAAO,EAAE,KAAK;QACdtC,OAAO,EAAE,yDAAyDgC,KAAK;MACzE,CAAC,CAAC;IACJ;;IAEAH,IAAI,CAAC,CAAC;EACR,CAAC;AACH,CAAC;;AAEDU,MAAM,CAACC,OAAO,GAAG;EACfzE,eAAe;EACf8B,kBAAkB;EAClBM,aAAa;EACba,sBAAsB;EACtBQ,YAAY;EACZC,YAAY;EACZE,wBAAwB;EACxBI;AACF,CAAC","ignoreList":[]}