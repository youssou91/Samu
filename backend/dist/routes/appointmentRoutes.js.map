{"version":3,"file":"appointmentRoutes.js","names":["express","require","router","Router","check","createAppointment","getAppointments","updateAppointment","deleteAppointment","startAppointment","completeAppointment","protect","authorize","use","route","get","post","not","isEmpty","isISO8601","toDate","isIn","put","optional","delete","module","exports"],"sources":["../../src/routes/appointmentRoutes.js"],"sourcesContent":["const express = require('express');\nconst router = express.Router();\nconst { check } = require('express-validator');\nconst { \n  createAppointment, \n  getAppointments, \n  updateAppointment, \n  deleteAppointment,\n  startAppointment,\n  completeAppointment\n} = require('../controllers/appointmentController');\nconst { protect, authorize } = require('../middleware/authMiddleware');\n\n// Protéger toutes les routes avec l'authentification\nrouter.use(protect);\n\n// Routes pour les rendez-vous\nrouter\n  .route('/')\n  .get(getAppointments)\n  .post(\n    [\n      check('patientId', 'ID du patient requis').not().isEmpty(),\n      check('patientName', 'Nom du patient requis').not().isEmpty(),\n      check('patientPhone', 'Téléphone du patient requis').not().isEmpty(),\n      check('doctorId', 'ID du médecin requis').not().isEmpty(),\n      check('doctorName', 'Nom du médecin requis').not().isEmpty(),\n      check('startTime', 'Heure de début requise').isISO8601().toDate(),\n      check('endTime', 'Heure de fin requise').isISO8601().toDate(),\n      check('type', 'Type de consultation requis').isIn(['consultation', 'controle', 'urgence', 'autre'])\n    ],\n    createAppointment\n  );\n\nrouter\n  .route('/:id')\n  .put(\n    [\n      check('status').optional().isIn(['en_attente', 'confirme', 'en_cours', 'termine', 'annule', 'rate']),\n      check('startTime').optional().isISO8601().toDate(),\n      check('endTime').optional().isISO8601().toDate()\n    ],\n    updateAppointment\n  )\n  .delete(deleteAppointment);\n\n// Routes pour le suivi des rendez-vous\nrouter.put('/:id/start', startAppointment);\nrouter.put('/:id/complete', completeAppointment);\n\nmodule.exports = router;\n"],"mappings":"aAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAM,EAAEC,KAAK,CAAC,CAAC,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AAC9C,MAAM;EACJI,iBAAiB;EACjBC,eAAe;EACfC,iBAAiB;EACjBC,iBAAiB;EACjBC,gBAAgB;EAChBC;AACF,CAAC,GAAGT,OAAO,CAAC,sCAAsC,CAAC;AACnD,MAAM,EAAEU,OAAO,EAAEC,SAAS,CAAC,CAAC,GAAGX,OAAO,CAAC,8BAA8B,CAAC;;AAEtE;AACAC,MAAM,CAACW,GAAG,CAACF,OAAO,CAAC;;AAEnB;AACAT,MAAM;AACHY,KAAK,CAAC,GAAG,CAAC;AACVC,GAAG,CAACT,eAAe,CAAC;AACpBU,IAAI;EACH;EACEZ,KAAK,CAAC,WAAW,EAAE,sBAAsB,CAAC,CAACa,GAAG,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EAC1Dd,KAAK,CAAC,aAAa,EAAE,uBAAuB,CAAC,CAACa,GAAG,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EAC7Dd,KAAK,CAAC,cAAc,EAAE,6BAA6B,CAAC,CAACa,GAAG,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EACpEd,KAAK,CAAC,UAAU,EAAE,sBAAsB,CAAC,CAACa,GAAG,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EACzDd,KAAK,CAAC,YAAY,EAAE,uBAAuB,CAAC,CAACa,GAAG,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;EAC5Dd,KAAK,CAAC,WAAW,EAAE,wBAAwB,CAAC,CAACe,SAAS,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;EACjEhB,KAAK,CAAC,SAAS,EAAE,sBAAsB,CAAC,CAACe,SAAS,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;EAC7DhB,KAAK,CAAC,MAAM,EAAE,6BAA6B,CAAC,CAACiB,IAAI,CAAC,CAAC,cAAc,EAAE,UAAU,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC,CACpG;;EACDhB;AACF,CAAC;;AAEHH,MAAM;AACHY,KAAK,CAAC,MAAM,CAAC;AACbQ,GAAG;EACF;EACElB,KAAK,CAAC,QAAQ,CAAC,CAACmB,QAAQ,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC,YAAY,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;EACpGjB,KAAK,CAAC,WAAW,CAAC,CAACmB,QAAQ,CAAC,CAAC,CAACJ,SAAS,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;EAClDhB,KAAK,CAAC,SAAS,CAAC,CAACmB,QAAQ,CAAC,CAAC,CAACJ,SAAS,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC,CACjD;;EACDb;AACF,CAAC;AACAiB,MAAM,CAAChB,iBAAiB,CAAC;;AAE5B;AACAN,MAAM,CAACoB,GAAG,CAAC,YAAY,EAAEb,gBAAgB,CAAC;AAC1CP,MAAM,CAACoB,GAAG,CAAC,eAAe,EAAEZ,mBAAmB,CAAC;;AAEhDe,MAAM,CAACC,OAAO,GAAGxB,MAAM","ignoreList":[]}