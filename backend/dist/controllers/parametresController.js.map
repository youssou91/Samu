{"version":3,"file":"parametresController.js","names":["Parametre","require","JoursFeries","asyncHandler","validationResult","exports","obtenirParametres","req","res","user","role","status","json","succes","message","erreurs","champ","parametres","findOne","parametresParDefaut","horairesOuverture","jour","ouvrir","fermer","estOuvert","dureeRdvDefaut","dureePauseDefaut","delaiAnnulationHeures","delaiRappelHeures","notifications","emailActif","smsActif","rappelActif","confirmationActif","annulationActif","modificationActif","creePar","id","save","donnees","mettreAJourParametres","errors","isEmpty","array","map","err","param","msg","body","findOneAndUpdate","$set","modifiePar","dateMiseAJour","Date","now","new","upsert","runValidators","setDefaultsOnInsert","obtenirJoursFeries","annee","query","debutAnnee","finAnnee","date","$gte","$lte","joursFeries","find","sort","total","length","ajouterJourFerie","libelle","estRecurrent","jourFerieExiste","jourFerie","create","supprimerJourFerie","findById","params","remove","genererJoursFeries","isNaN","joursFeriesFixes","a","b","Math","floor","c","d","e","f","g","h","i","k","l","m","moisPaques","jourPaques","datePaques","joursFeriesMobiles","getTime","tousLesJoursFeries","resultats","jf","existeDeja","nouveauJourFerie","push","toLocaleDateString","error","ajoutes","obtenirParametresNotifications","utilisateur","Utilisateur","select","parametresNotifications","rappelAvantHeures","mettreAJourParametresNotifications","findByIdAndUpdate"],"sources":["../../src/controllers/parametresController.js"],"sourcesContent":["const Parametre = require('../models/Parametre');\nconst JoursFeries = require('../models/JoursFeries');\nconst asyncHandler = require('express-async-handler');\nconst { validationResult } = require('express-validator');\n\n/**\n * Obtenir les paramètres de l'application\n * GET /api/parametres\n * Accès: Admin uniquement\n */\nexports.obtenirParametres = asyncHandler(async (req, res) => {\n  // Vérifier que l'utilisateur est admin\n  if (req.user.role !== 'admin') {\n    return res.status(403).json({\n      succes: false,\n      message: 'Accès non autorisé',\n      erreurs: [\n        { champ: 'autorisation', message: 'Vous devez être administrateur pour accéder à cette ressource' }\n      ]\n    });\n  }\n\n  // Récupérer les paramètres\n  const parametres = await Parametre.findOne({});\n  \n  // Si aucun paramètre n'existe, créer une configuration par défaut\n  if (!parametres) {\n    const parametresParDefaut = new Parametre({\n      horairesOuverture: [\n        { jour: 1, ouvrir: '08:00', fermer: '18:00', estOuvert: true },\n        { jour: 2, ouvrir: '08:00', fermer: '18:00', estOuvert: true },\n        { jour: 3, ouvrir: '08:00', fermer: '18:00', estOuvert: true },\n        { jour: 4, ouvrir: '08:00', fermer: '18:00', estOuvert: true },\n        { jour: 5, ouvrir: '08:00', fermer: '18:00', estOuvert: true },\n        { jour: 6, ouvrir: '09:00', fermer: '12:00', estOuvert: false },\n        { jour: 0, ouvrir: '09:00', fermer: '12:00', estOuvert: false },\n      ],\n      dureeRdvDefaut: 30, // en minutes\n      dureePauseDefaut: 15, // en minutes\n      delaiAnnulationHeures: 24, // délai minimum pour annuler un RDV\n      delaiRappelHeures: 24, // délai d'envoi du rappel avant le RDV\n      notifications: {\n        emailActif: true,\n        smsActif: true,\n        rappelActif: true,\n        confirmationActif: true,\n        annulationActif: true,\n        modificationActif: true\n      },\n      creePar: req.user.id\n    });\n    \n    await parametresParDefaut.save();\n    \n    return res.status(200).json({\n      succes: true,\n      message: 'Paramètres récupérés avec succès',\n      donnees: {\n        parametres: parametresParDefaut\n      }\n    });\n  }\n  \n  res.status(200).json({\n    succes: true,\n    message: 'Paramètres récupérés avec succès',\n    donnees: {\n      parametres\n    }\n  });\n});\n\n/**\n * Mettre à jour les paramètres de l'application\n * PUT /api/parametres\n * Accès: Admin uniquement\n */\nexports.mettreAJourParametres = asyncHandler(async (req, res) => {\n  // Vérifier que l'utilisateur est admin\n  if (req.user.role !== 'admin') {\n    return res.status(403).json({\n      succes: false,\n      message: 'Accès non autorisé',\n      erreurs: [\n        { champ: 'autorisation', message: 'Vous devez être administrateur pour modifier cette ressource' }\n      ]\n    });\n  }\n  \n  // Valider les données\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({\n      succes: false,\n      message: 'Erreur de validation',\n      erreurs: errors.array().map(err => ({\n        champ: err.param,\n        message: err.msg\n      }))\n    });\n  }\n  \n  const {\n    horairesOuverture,\n    dureeRdvDefaut,\n    dureePauseDefaut,\n    delaiAnnulationHeures,\n    delaiRappelHeures,\n    notifications\n  } = req.body;\n  \n  // Mettre à jour les paramètres\n  const parametres = await Parametre.findOneAndUpdate(\n    {},\n    {\n      $set: {\n        horairesOuverture,\n        dureeRdvDefaut,\n        dureePauseDefaut,\n        delaiAnnulationHeures,\n        delaiRappelHeures,\n        notifications,\n        modifiePar: req.user.id,\n        dateMiseAJour: Date.now()\n      }\n    },\n    { new: true, upsert: true, runValidators: true, setDefaultsOnInsert: true }\n  );\n  \n  res.status(200).json({\n    succes: true,\n    message: 'Paramètres mis à jour avec succès',\n    donnees: {\n      parametres\n    }\n  });\n});\n\n/**\n * Obtenir la liste des jours fériés\n * GET /api/parametres/jours-feries\n * Accès: Tous les utilisateurs authentifiés\n */\nexports.obtenirJoursFeries = asyncHandler(async (req, res) => {\n  const { annee } = req.query;\n  \n  let query = {};\n  \n  // Filtrer par année si spécifiée\n  if (annee) {\n    const debutAnnee = new Date(annee, 0, 1);\n    const finAnnee = new Date(annee, 11, 31, 23, 59, 59);\n    \n    query.date = {\n      $gte: debutAnnee,\n      $lte: finAnnee\n    };\n  }\n  \n  const joursFeries = await JoursFeries.find(query).sort({ date: 1 });\n  \n  res.status(200).json({\n    succes: true,\n    message: 'Jours fériés récupérés avec succès',\n    donnees: {\n      joursFeries,\n      total: joursFeries.length\n    }\n  });\n});\n\n/**\n * Ajouter un jour férié\n * POST /api/parametres/jours-feries\n * Accès: Admin uniquement\n */\nexports.ajouterJourFerie = asyncHandler(async (req, res) => {\n  // Vérifier que l'utilisateur est admin\n  if (req.user.role !== 'admin') {\n    return res.status(403).json({\n      succes: false,\n      message: 'Accès non autorisé',\n      erreurs: [\n        { champ: 'autorisation', message: 'Vous devez être administrateur pour ajouter un jour férié' }\n      ]\n    });\n  }\n  \n  // Valider les données\n  const errors = validationResult(req);\n  if (!errors.isEmpty()) {\n    return res.status(400).json({\n      succes: false,\n      message: 'Erreur de validation',\n      erreurs: errors.array().map(err => ({\n        champ: err.param,\n        message: err.msg\n      }))\n    });\n  }\n  \n  const { date, libelle, estRecurrent } = req.body;\n  \n  // Vérifier si le jour férié existe déjà\n  const jourFerieExiste = await JoursFeries.findOne({ date });\n  \n  if (jourFerieExiste) {\n    return res.status(400).json({\n      succes: false,\n      message: 'Erreur de validation',\n      erreurs: [\n        { champ: 'date', message: 'Un jour férié existe déjà pour cette date' }\n      ]\n    });\n  }\n  \n  // Créer le jour férié\n  const jourFerie = await JoursFeries.create({\n    date,\n    libelle,\n    estRecurrent,\n    creePar: req.user.id\n  });\n  \n  res.status(201).json({\n    succes: true,\n    message: 'Jour férié ajouté avec succès',\n    donnees: {\n      jourFerie\n    }\n  });\n});\n\n/**\n * Supprimer un jour férié\n * DELETE /api/parametres/jours-feries/:id\n * Accès: Admin uniquement\n */\nexports.supprimerJourFerie = asyncHandler(async (req, res) => {\n  // Vérifier que l'utilisateur est admin\n  if (req.user.role !== 'admin') {\n    return res.status(403).json({\n      succes: false,\n      message: 'Accès non autorisé',\n      erreurs: [\n        { champ: 'autorisation', message: 'Vous devez être administrateur pour supprimer un jour férié' }\n      ]\n    });\n  }\n  \n  const jourFerie = await JoursFeries.findById(req.params.id);\n  \n  if (!jourFerie) {\n    return res.status(404).json({\n      succes: false,\n      message: 'Ressource non trouvée',\n      erreurs: [\n        { champ: 'id', message: 'Aucun jour férié trouvé avec cet ID' }\n      ]\n    });\n  }\n  \n  // Supprimer le jour férié\n  await jourFerie.remove();\n  \n  res.status(200).json({\n    succes: true,\n    message: 'Jour férié supprimé avec succès',\n    donnees: {}\n  });\n});\n\n/**\n * Générer automatiquement les jours fériés pour une année donnée\n * POST /api/parametres/jours-feries/generer\n * Accès: Admin uniquement\n */\nexports.genererJoursFeries = asyncHandler(async (req, res) => {\n  // Vérifier que l'utilisateur est admin\n  if (req.user.role !== 'admin') {\n    return res.status(403).json({\n      succes: false,\n      message: 'Accès non autorisé',\n      erreurs: [\n        { champ: 'autorisation', message: 'Vous devez être administrateur pour générer des jours fériés' }\n      ]\n    });\n  }\n  \n  const { annee } = req.body;\n  \n  if (!annee || isNaN(annee)) {\n    return res.status(400).json({\n      succes: false,\n      message: 'Erreur de validation',\n      erreurs: [\n        { champ: 'annee', message: 'L\\'année est requise et doit être un nombre valide' }\n      ]\n    });\n  }\n  \n  // Jours fériés fixes (date fixe chaque année)\n  const joursFeriesFixes = [\n    { date: new Date(annee, 0, 1), libelle: 'Jour de l\\'an', estRecurrent: true },\n    { date: new Date(annee, 4, 1), libelle: 'Fête du Travail', estRecurrent: true },\n    { date: new Date(annee, 4, 8), libelle: 'Victoire 1945', estRecurrent: true },\n    { date: new Date(annee, 6, 14), libelle: 'Fête Nationale', estRecurrent: true },\n    { date: new Date(annee, 7, 15), libelle: 'Assomption', estRecurrent: true },\n    { date: new Date(annee, 10, 1), libelle: 'Toussaint', estRecurrent: true },\n    { date: new Date(annee, 10, 11), libelle: 'Armistice 1918', estRecurrent: true },\n    { date: new Date(annee, 11, 25), libelle: 'Noël', estRecurrent: true }\n  ];\n  \n  // Calculer les jours fériés mobiles (Pâques, Ascension, Pentecôte)\n  const a = annee % 19;\n  const b = Math.floor(annee / 100);\n  const c = annee % 100;\n  const d = Math.floor(b / 4);\n  const e = b % 4;\n  const f = Math.floor((b + 8) / 25);\n  const g = Math.floor((b - f + 1) / 3);\n  const h = (19 * a + b - d - g + 15) % 30;\n  const i = Math.floor(c / 4);\n  const k = c % 4;\n  const l = (32 + 2 * e + 2 * i - h - k) % 7;\n  const m = Math.floor((a + 11 * h + 22 * l) / 451);\n  const moisPaques = Math.floor((h + l - 7 * m + 114) / 31) - 1;\n  const jourPaques = (h + l - 7 * m + 114) % 31 + 1;\n  \n  const datePaques = new Date(annee, moisPaques, jourPaques);\n  \n  // Ajouter les jours fériés mobiles\n  const joursFeriesMobiles = [\n    { date: datePaques, libelle: 'Dimanche de Pâques', estRecurrent: true },\n    { \n      date: new Date(datePaques.getTime() + 86400000), // +1 jour\n      libelle: 'Lundi de Pâques', \n      estRecurrent: true \n    },\n    { \n      date: new Date(datePaques.getTime() + 39 * 86400000), // 39 jours après Pâques\n      libelle: 'Jeudi de l\\'Ascension', \n      estRecurrent: true \n    },\n    { \n      date: new Date(datePaques.getTime() + 49 * 86400000), // 49 jours après Pâques\n      libelle: 'Lundi de Pentecôte', \n      estRecurrent: true \n    }\n  ];\n  \n  // Fusionner les tableaux\n  const tousLesJoursFeries = [...joursFeriesFixes, ...joursFeriesMobiles];\n  \n  // Vérifier les doublons et insérer les jours fériés\n  const resultats = [];\n  const erreurs = [];\n  \n  for (const jf of tousLesJoursFeries) {\n    try {\n      // Vérifier si le jour férié existe déjà\n      const existeDeja = await JoursFeries.findOne({ date: jf.date });\n      \n      if (!existeDeja) {\n        const nouveauJourFerie = await JoursFeries.create({\n          date: jf.date,\n          libelle: jf.libelle,\n          estRecurrent: jf.estRecurrent,\n          creePar: req.user.id\n        });\n        \n        resultats.push(nouveauJourFerie);\n      } else {\n        erreurs.push({\n          date: jf.date,\n          message: `Un jour férié existe déjà pour le ${jf.date.toLocaleDateString('fr-FR')}`\n        });\n      }\n    } catch (error) {\n      erreurs.push({\n        date: jf.date,\n        message: `Erreur lors de l'ajout du jour férié: ${error.message}`\n      });\n    }\n  }\n  \n  res.status(200).json({\n    succes: true,\n    message: `Génération des jours fériés pour l'année ${annee} terminée`,\n    donnees: {\n      ajoutes: resultats.length,\n      erreurs: erreurs.length,\n      resultats,\n      erreurs\n    }\n  });\n});\n\n/**\n * Obtenir les paramètres de notification\n * GET /api/parametres/notifications\n * Accès: Tous les utilisateurs authentifiés\n */\nexports.obtenirParametresNotifications = asyncHandler(async (req, res) => {\n  // Récupérer les paramètres de notification de l'utilisateur\n  const utilisateur = await Utilisateur.findById(req.user.id).select('+parametresNotifications');\n  \n  // Si l'utilisateur n'a pas encore de paramètres, initialiser avec des valeurs par défaut\n  if (!utilisateur.parametresNotifications) {\n    utilisateur.parametresNotifications = {\n      emailActif: true,\n      smsActif: true,\n      rappelActif: true,\n      confirmationActif: true,\n      annulationActif: true,\n      modificationActif: true,\n      rappelAvantHeures: 24\n    };\n    \n    await utilisateur.save();\n  }\n  \n  res.status(200).json({\n    succes: true,\n    message: 'Paramètres de notification récupérés avec succès',\n    donnees: {\n      parametres: utilisateur.parametresNotifications\n    }\n  });\n});\n\n/**\n * Mettre à jour les paramètres de notification de l'utilisateur\n * PUT /api/parametres/notifications\n * Accès: Utilisateur authentifié\n */\nexports.mettreAJourParametresNotifications = asyncHandler(async (req, res) => {\n  const {\n    emailActif,\n    smsActif,\n    rappelActif,\n    confirmationActif,\n    annulationActif,\n    modificationActif,\n    rappelAvantHeures\n  } = req.body;\n  \n  // Mettre à jour les paramètres de notification\n  const utilisateur = await Utilisateur.findByIdAndUpdate(\n    req.user.id,\n    {\n      $set: {\n        'parametresNotifications.emailActif': emailActif,\n        'parametresNotifications.smsActif': smsActif,\n        'parametresNotifications.rappelActif': rappelActif,\n        'parametresNotifications.confirmationActif': confirmationActif,\n        'parametresNotifications.annulationActif': annulationActif,\n        'parametresNotifications.modificationActif': modificationActif,\n        'parametresNotifications.rappelAvantHeures': rappelAvantHeures,\n        dateMiseAJour: Date.now()\n      }\n    },\n    { new: true, runValidators: true }\n  ).select('+parametresNotifications');\n  \n  res.status(200).json({\n    succes: true,\n    message: 'Paramètres de notification mis à jour avec succès',\n    donnees: {\n      parametres: utilisateur.parametresNotifications\n    }\n  });\n});\n"],"mappings":"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","ignoreList":[]}