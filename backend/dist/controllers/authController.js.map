{"version":3,"file":"authController.js","names":["jwt","require","Utilisateur","genererToken","id","role","sign","process","env","JWT_SECRET","expiresIn","exports","inscription","req","res","prenom","nom","email","motDePasse","telephone","body","utilisateurExiste","findOne","status","json","succes","message","erreurs","champ","utilisateur","create","token","_id","donnees","error","connexion","actif","estValide","verifierMotDePasse","derniereConnexion","Date","now","save","console","erreur","NODE_ENV","undefined","obtenirProfil","findById","user","select","lean","reponse","specialite"],"sources":["../../src/controllers/authController.js"],"sourcesContent":["const jwt = require('jsonwebtoken');\nconst Utilisateur = require('../models/Utilisateur');\n\n// Générer un token JWT\nconst genererToken = (id, role) => {\n  return jwt.sign(\n    { id, role },\n    process.env.JWT_SECRET,\n    { expiresIn: '30d' }\n  );\n};\n\n// Inscription d'un nouvel utilisateur\nexports.inscription = async (req, res) => {\n  try {\n    const { prenom, nom, email, motDePasse, role = 'secretaire', telephone } = req.body;\n\n    // Vérifier si l'utilisateur existe déjà\n    const utilisateurExiste = await Utilisateur.findOne({ email });\n    if (utilisateurExiste) {\n      return res.status(400).json({ \n        succes: false,\n        message: 'Erreur de validation',\n        erreurs: [\n          { champ: 'email', message: 'Cet email est déjà utilisé' }\n        ]\n      });\n    }\n\n    // Créer un nouvel utilisateur\n    const utilisateur = await Utilisateur.create({\n      prenom,\n      nom,\n      email,\n      motDePasse,\n      role,\n      telephone\n    });\n\n    // Générer le token\n    const token = genererToken(utilisateur._id, utilisateur.role);\n\n    // Envoyer la réponse\n    res.status(201).json({\n      succes: true,\n      message: 'Utilisateur enregistré avec succès',\n      donnees: {\n        utilisateur: {\n          _id: utilisateur._id,\n          prenom: utilisateur.prenom,\n          nom: utilisateur.nom,\n          email: utilisateur.email,\n          role: utilisateur.role,\n          telephone: utilisateur.telephone\n        },\n        token\n      }\n    });\n  } catch (error) {\n    res.status(500).json({ \n      succes: false,\n      message: error.message \n    });\n  }\n};\n\n// Connexion d'un utilisateur\nexports.connexion = async (req, res) => {\n  try {\n    const { email, motDePasse } = req.body;\n\n    // Vérifier si l'utilisateur existe et est actif\n    const utilisateur = await Utilisateur.findOne({ email, actif: true });\n    if (!utilisateur) {\n      return res.status(401).json({ \n        succes: false,\n        message: 'Identifiants invalides',\n        erreurs: [\n          { champ: 'email', message: 'Email ou mot de passe incorrect' },\n          { champ: 'motDePasse', message: 'Email ou mot de passe incorrect' }\n        ]\n      });\n    }\n\n    // Vérifier le mot de passe\n    const estValide = await utilisateur.verifierMotDePasse(motDePasse);\n    if (!estValide) {\n      return res.status(401).json({ \n        succes: false,\n        message: 'Identifiants invalides',\n        erreurs: [\n          { champ: 'email', message: 'Email ou mot de passe incorrect' },\n          { champ: 'motDePasse', message: 'Email ou mot de passe incorrect' }\n        ]\n      });\n    }\n\n    // Mettre à jour la dernière connexion\n    utilisateur.derniereConnexion = Date.now();\n    await utilisateur.save();\n\n    // Générer le token\n    const token = genererToken(utilisateur._id, utilisateur.role);\n\n    // Envoyer la réponse\n    res.status(200).json({\n      succes: true,\n      message: 'Connexion réussie',\n      donnees: {\n        utilisateur: {\n          _id: utilisateur._id,\n          prenom: utilisateur.prenom,\n          nom: utilisateur.nom,\n          email: utilisateur.email,\n          role: utilisateur.role,\n          telephone: utilisateur.telephone,\n          derniereConnexion: utilisateur.derniereConnexion\n        },\n        token\n      }\n    });\n  } catch (error) {\n    console.error('Erreur lors de la connexion:', error);\n    res.status(500).json({ \n      succes: false,\n      message: 'Une erreur est survenue lors de la connexion',\n      erreur: process.env.NODE_ENV === 'development' ? error.message : undefined\n    });\n  }\n};\n\n// Récupérer le profil de l'utilisateur connecté\nexports.obtenirProfil = async (req, res) => {\n  try {\n    // Récupérer l'utilisateur avec les champs nécessaires\n    const utilisateur = await Utilisateur.findById(req.user.id)\n      .select('-motDePasse -__v -dateCreation -dateMiseAJour')\n      .lean();\n    \n    if (!utilisateur) {\n      return res.status(404).json({ \n        succes: false,\n        message: 'Utilisateur non trouvé',\n        erreurs: [\n          { champ: 'utilisateur', message: 'Aucun utilisateur trouvé avec cet identifiant' }\n        ]\n      });\n    }\n\n    // Formater la réponse\n    const reponse = {\n      _id: utilisateur._id,\n      prenom: utilisateur.prenom,\n      nom: utilisateur.nom,\n      email: utilisateur.email,\n      telephone: utilisateur.telephone,\n      role: utilisateur.role,\n      specialite: utilisateur.specialite,\n      actif: utilisateur.actif,\n      derniereConnexion: utilisateur.derniereConnexion\n    };\n\n    res.status(200).json({\n      succes: true,\n      message: 'Profil utilisateur récupéré avec succès',\n      donnees: {\n        utilisateur: reponse\n      }\n    });\n  } catch (error) {\n    console.error('Erreur lors de la récupération du profil:', error);\n    res.status(500).json({ \n      succes: false,\n      message: 'Une erreur est survenue lors de la récupération du profil',\n      erreur: process.env.NODE_ENV === 'development' ? error.message : undefined\n    });\n  }\n};\n"],"mappings":"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","ignoreList":[]}