{"version":3,"file":"appointmentController.js","names":["Appointment","require","validationResult","exports","createAppointment","req","res","errors","isEmpty","status","json","array","patientId","patientName","patientPhone","startTime","endTime","type","reason","notes","body","isAvailable","checkAvailability","doctorId","Date","success","message","appointment","create","patient","doctor","doctorName","createdBy","user","id","data","error","getAppointments","startDate","endDate","query","$gte","$lte","appointments","find","sort","populate","count","length","updateAppointment","params","updates","findById","findByIdAndUpdate","updatedBy","updatedAt","now","new","runValidators","deleteAppointment","save","startAppointment","completeAppointment"],"sources":["../../src/controllers/appointmentController.js"],"sourcesContent":["const Appointment = require('../models/Appointment');\nconst { validationResult } = require('express-validator');\n\n// Créer un nouveau rendez-vous\nexports.createAppointment = async (req, res) => {\n  try {\n    const errors = validationResult(req);\n    if (!errors.isEmpty()) {\n      return res.status(400).json({ errors: errors.array() });\n    }\n\n    const { \n      patientId, \n      patientName, \n      patientPhone, \n      startTime, \n      endTime, \n      type, \n      reason, \n      notes \n    } = req.body;\n\n    // Vérifier la disponibilité du créneau\n    const isAvailable = await Appointment.checkAvailability(\n      req.body.doctorId,\n      new Date(startTime),\n      new Date(endTime)\n    );\n\n    if (!isAvailable) {\n      return res.status(400).json({ \n        success: false,\n        message: 'Le médecin a déjà un rendez-vous à ce créneau horaire' \n      });\n    }\n\n    // Créer le rendez-vous\n    const appointment = await Appointment.create({\n      patient: patientId,\n      patientName,\n      patientPhone,\n      doctor: req.body.doctorId,\n      doctorName: req.body.doctorName,\n      startTime,\n      endTime,\n      type,\n      reason,\n      notes,\n      createdBy: req.user.id\n    });\n\n    res.status(201).json({\n      success: true,\n      data: appointment\n    });\n  } catch (error) {\n    res.status(500).json({ \n      success: false,\n      message: error.message \n    });\n  }\n};\n\n// Récupérer tous les rendez-vous\nexports.getAppointments = async (req, res) => {\n  try {\n    const { doctorId, patientId, startDate, endDate, status } = req.query;\n    const query = {};\n\n    if (doctorId) query.doctor = doctorId;\n    if (patientId) query.patient = patientId;\n    if (status) query.status = status;\n\n    if (startDate && endDate) {\n      query.startTime = {\n        $gte: new Date(startDate),\n        $lte: new Date(endDate)\n      };\n    }\n\n    const appointments = await Appointment.find(query)\n      .sort({ startTime: 1 })\n      .populate('patient', 'firstName lastName email')\n      .populate('doctor', 'firstName lastName specialty');\n\n    res.status(200).json({\n      success: true,\n      count: appointments.length,\n      data: appointments\n    });\n  } catch (error) {\n    res.status(500).json({ \n      success: false,\n      message: error.message \n    });\n  }\n};\n\n// Mettre à jour un rendez-vous\nexports.updateAppointment = async (req, res) => {\n  try {\n    const { id } = req.params;\n    const updates = req.body;\n    \n    // Vérifier si le rendez-vous existe\n    let appointment = await Appointment.findById(id);\n    if (!appointment) {\n      return res.status(404).json({\n        success: false,\n        message: 'Rendez-vous non trouvé'\n      });\n    }\n\n    // Vérifier la disponibilité si les horaires changent\n    if (updates.startTime || updates.endTime) {\n      const startTime = new Date(updates.startTime || appointment.startTime);\n      const endTime = new Date(updates.endTime || appointment.endTime);\n      \n      const isAvailable = await Appointment.checkAvailability(\n        updates.doctorId || appointment.doctor,\n        startTime,\n        endTime,\n        id\n      );\n\n      if (!isAvailable) {\n        return res.status(400).json({ \n          success: false,\n          message: 'Le médecin a déjà un rendez-vous à ce créneau horaire' \n        });\n      }\n    }\n\n    // Mettre à jour le rendez-vous\n    appointment = await Appointment.findByIdAndUpdate(\n      id, \n      { \n        ...updates, \n        updatedBy: req.user.id,\n        updatedAt: Date.now()\n      }, \n      { new: true, runValidators: true }\n    );\n\n    res.status(200).json({\n      success: true,\n      data: appointment\n    });\n  } catch (error) {\n    res.status(500).json({ \n      success: false,\n      message: error.message \n    });\n  }\n};\n\n// Supprimer un rendez-vous\nexports.deleteAppointment = async (req, res) => {\n  try {\n    const appointment = await Appointment.findById(req.params.id);\n    \n    if (!appointment) {\n      return res.status(404).json({\n        success: false,\n        message: 'Rendez-vous non trouvé'\n      });\n    }\n\n    // Marquer comme annulé au lieu de supprimer\n    appointment.status = 'annule';\n    appointment.updatedBy = req.user.id;\n    await appointment.save();\n\n    res.status(200).json({\n      success: true,\n      data: {}\n    });\n  } catch (error) {\n    res.status(500).json({ \n      success: false,\n      message: error.message \n    });\n  }\n};\n\n// Marquer un rendez-vous comme commencé\nexports.startAppointment = async (req, res) => {\n  try {\n    const appointment = await Appointment.findById(req.params.id);\n    \n    if (!appointment) {\n      return res.status(404).json({\n        success: false,\n        message: 'Rendez-vous non trouvé'\n      });\n    }\n\n    appointment.status = 'en_cours';\n    appointment.updatedBy = req.user.id;\n    await appointment.save();\n\n    res.status(200).json({\n      success: true,\n      data: appointment\n    });\n  } catch (error) {\n    res.status(500).json({ \n      success: false,\n      message: error.message \n    });\n  }\n};\n\n// Marquer un rendez-vous comme terminé\nexports.completeAppointment = async (req, res) => {\n  try {\n    const appointment = await Appointment.findById(req.params.id);\n    \n    if (!appointment) {\n      return res.status(404).json({\n        success: false,\n        message: 'Rendez-vous non trouvé'\n      });\n    }\n\n    appointment.status = 'termine';\n    appointment.updatedBy = req.user.id;\n    await appointment.save();\n\n    res.status(200).json({\n      success: true,\n      data: appointment\n    });\n  } catch (error) {\n    res.status(500).json({ \n      success: false,\n      message: error.message \n    });\n  }\n};\n"],"mappings":"aAAA,MAAMA,WAAW,GAAGC,OAAO,CAAC,uBAAuB,CAAC;AACpD,MAAM,EAAEC,gBAAgB,CAAC,CAAC,GAAGD,OAAO,CAAC,mBAAmB,CAAC;;AAEzD;AACAE,OAAO,CAACC,iBAAiB,GAAG,OAAOC,GAAG,EAAEC,GAAG,KAAK;EAC9C,IAAI;IACF,MAAMC,MAAM,GAAGL,gBAAgB,CAACG,GAAG,CAAC;IACpC,IAAI,CAACE,MAAM,CAACC,OAAO,CAAC,CAAC,EAAE;MACrB,OAAOF,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,EAAEH,MAAM,EAAEA,MAAM,CAACI,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IACzD;;IAEA,MAAM;MACJC,SAAS;MACTC,WAAW;MACXC,YAAY;MACZC,SAAS;MACTC,OAAO;MACPC,IAAI;MACJC,MAAM;MACNC;IACF,CAAC,GAAGd,GAAG,CAACe,IAAI;;IAEZ;IACA,MAAMC,WAAW,GAAG,MAAMrB,WAAW,CAACsB,iBAAiB;MACrDjB,GAAG,CAACe,IAAI,CAACG,QAAQ;MACjB,IAAIC,IAAI,CAACT,SAAS,CAAC;MACnB,IAAIS,IAAI,CAACR,OAAO;IAClB,CAAC;;IAED,IAAI,CAACK,WAAW,EAAE;MAChB,OAAOf,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1Be,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;;IAEA;IACA,MAAMC,WAAW,GAAG,MAAM3B,WAAW,CAAC4B,MAAM,CAAC;MAC3CC,OAAO,EAAEjB,SAAS;MAClBC,WAAW;MACXC,YAAY;MACZgB,MAAM,EAAEzB,GAAG,CAACe,IAAI,CAACG,QAAQ;MACzBQ,UAAU,EAAE1B,GAAG,CAACe,IAAI,CAACW,UAAU;MAC/BhB,SAAS;MACTC,OAAO;MACPC,IAAI;MACJC,MAAM;MACNC,KAAK;MACLa,SAAS,EAAE3B,GAAG,CAAC4B,IAAI,CAACC;IACtB,CAAC,CAAC;;IAEF5B,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBe,OAAO,EAAE,IAAI;MACbU,IAAI,EAAER;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd9B,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBe,OAAO,EAAE,KAAK;MACdC,OAAO,EAAEU,KAAK,CAACV;IACjB,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACAvB,OAAO,CAACkC,eAAe,GAAG,OAAOhC,GAAG,EAAEC,GAAG,KAAK;EAC5C,IAAI;IACF,MAAM,EAAEiB,QAAQ,EAAEX,SAAS,EAAE0B,SAAS,EAAEC,OAAO,EAAE9B,MAAM,CAAC,CAAC,GAAGJ,GAAG,CAACmC,KAAK;IACrE,MAAMA,KAAK,GAAG,CAAC,CAAC;;IAEhB,IAAIjB,QAAQ,EAAEiB,KAAK,CAACV,MAAM,GAAGP,QAAQ;IACrC,IAAIX,SAAS,EAAE4B,KAAK,CAACX,OAAO,GAAGjB,SAAS;IACxC,IAAIH,MAAM,EAAE+B,KAAK,CAAC/B,MAAM,GAAGA,MAAM;;IAEjC,IAAI6B,SAAS,IAAIC,OAAO,EAAE;MACxBC,KAAK,CAACzB,SAAS,GAAG;QAChB0B,IAAI,EAAE,IAAIjB,IAAI,CAACc,SAAS,CAAC;QACzBI,IAAI,EAAE,IAAIlB,IAAI,CAACe,OAAO;MACxB,CAAC;IACH;;IAEA,MAAMI,YAAY,GAAG,MAAM3C,WAAW,CAAC4C,IAAI,CAACJ,KAAK,CAAC;IAC/CK,IAAI,CAAC,EAAE9B,SAAS,EAAE,CAAC,CAAC,CAAC,CAAC;IACtB+B,QAAQ,CAAC,SAAS,EAAE,0BAA0B,CAAC;IAC/CA,QAAQ,CAAC,QAAQ,EAAE,8BAA8B,CAAC;;IAErDxC,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBe,OAAO,EAAE,IAAI;MACbsB,KAAK,EAAEJ,YAAY,CAACK,MAAM;MAC1Bb,IAAI,EAAEQ;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOP,KAAK,EAAE;IACd9B,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBe,OAAO,EAAE,KAAK;MACdC,OAAO,EAAEU,KAAK,CAACV;IACjB,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACAvB,OAAO,CAAC8C,iBAAiB,GAAG,OAAO5C,GAAG,EAAEC,GAAG,KAAK;EAC9C,IAAI;IACF,MAAM,EAAE4B,EAAE,CAAC,CAAC,GAAG7B,GAAG,CAAC6C,MAAM;IACzB,MAAMC,OAAO,GAAG9C,GAAG,CAACe,IAAI;;IAExB;IACA,IAAIO,WAAW,GAAG,MAAM3B,WAAW,CAACoD,QAAQ,CAAClB,EAAE,CAAC;IAChD,IAAI,CAACP,WAAW,EAAE;MAChB,OAAOrB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1Be,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;;IAEA;IACA,IAAIyB,OAAO,CAACpC,SAAS,IAAIoC,OAAO,CAACnC,OAAO,EAAE;MACxC,MAAMD,SAAS,GAAG,IAAIS,IAAI,CAAC2B,OAAO,CAACpC,SAAS,IAAIY,WAAW,CAACZ,SAAS,CAAC;MACtE,MAAMC,OAAO,GAAG,IAAIQ,IAAI,CAAC2B,OAAO,CAACnC,OAAO,IAAIW,WAAW,CAACX,OAAO,CAAC;;MAEhE,MAAMK,WAAW,GAAG,MAAMrB,WAAW,CAACsB,iBAAiB;QACrD6B,OAAO,CAAC5B,QAAQ,IAAII,WAAW,CAACG,MAAM;QACtCf,SAAS;QACTC,OAAO;QACPkB;MACF,CAAC;;MAED,IAAI,CAACb,WAAW,EAAE;QAChB,OAAOf,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;UAC1Be,OAAO,EAAE,KAAK;UACdC,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;IACF;;IAEA;IACAC,WAAW,GAAG,MAAM3B,WAAW,CAACqD,iBAAiB;MAC/CnB,EAAE;MACF;QACE,GAAGiB,OAAO;QACVG,SAAS,EAAEjD,GAAG,CAAC4B,IAAI,CAACC,EAAE;QACtBqB,SAAS,EAAE/B,IAAI,CAACgC,GAAG,CAAC;MACtB,CAAC;MACD,EAAEC,GAAG,EAAE,IAAI,EAAEC,aAAa,EAAE,IAAI,CAAC;IACnC,CAAC;;IAEDpD,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBe,OAAO,EAAE,IAAI;MACbU,IAAI,EAAER;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd9B,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBe,OAAO,EAAE,KAAK;MACdC,OAAO,EAAEU,KAAK,CAACV;IACjB,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACAvB,OAAO,CAACwD,iBAAiB,GAAG,OAAOtD,GAAG,EAAEC,GAAG,KAAK;EAC9C,IAAI;IACF,MAAMqB,WAAW,GAAG,MAAM3B,WAAW,CAACoD,QAAQ,CAAC/C,GAAG,CAAC6C,MAAM,CAAChB,EAAE,CAAC;;IAE7D,IAAI,CAACP,WAAW,EAAE;MAChB,OAAOrB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1Be,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;;IAEA;IACAC,WAAW,CAAClB,MAAM,GAAG,QAAQ;IAC7BkB,WAAW,CAAC2B,SAAS,GAAGjD,GAAG,CAAC4B,IAAI,CAACC,EAAE;IACnC,MAAMP,WAAW,CAACiC,IAAI,CAAC,CAAC;;IAExBtD,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBe,OAAO,EAAE,IAAI;MACbU,IAAI,EAAE,CAAC;IACT,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACd9B,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBe,OAAO,EAAE,KAAK;MACdC,OAAO,EAAEU,KAAK,CAACV;IACjB,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACAvB,OAAO,CAAC0D,gBAAgB,GAAG,OAAOxD,GAAG,EAAEC,GAAG,KAAK;EAC7C,IAAI;IACF,MAAMqB,WAAW,GAAG,MAAM3B,WAAW,CAACoD,QAAQ,CAAC/C,GAAG,CAAC6C,MAAM,CAAChB,EAAE,CAAC;;IAE7D,IAAI,CAACP,WAAW,EAAE;MAChB,OAAOrB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1Be,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;;IAEAC,WAAW,CAAClB,MAAM,GAAG,UAAU;IAC/BkB,WAAW,CAAC2B,SAAS,GAAGjD,GAAG,CAAC4B,IAAI,CAACC,EAAE;IACnC,MAAMP,WAAW,CAACiC,IAAI,CAAC,CAAC;;IAExBtD,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBe,OAAO,EAAE,IAAI;MACbU,IAAI,EAAER;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd9B,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBe,OAAO,EAAE,KAAK;MACdC,OAAO,EAAEU,KAAK,CAACV;IACjB,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACAvB,OAAO,CAAC2D,mBAAmB,GAAG,OAAOzD,GAAG,EAAEC,GAAG,KAAK;EAChD,IAAI;IACF,MAAMqB,WAAW,GAAG,MAAM3B,WAAW,CAACoD,QAAQ,CAAC/C,GAAG,CAAC6C,MAAM,CAAChB,EAAE,CAAC;;IAE7D,IAAI,CAACP,WAAW,EAAE;MAChB,OAAOrB,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;QAC1Be,OAAO,EAAE,KAAK;QACdC,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;;IAEAC,WAAW,CAAClB,MAAM,GAAG,SAAS;IAC9BkB,WAAW,CAAC2B,SAAS,GAAGjD,GAAG,CAAC4B,IAAI,CAACC,EAAE;IACnC,MAAMP,WAAW,CAACiC,IAAI,CAAC,CAAC;;IAExBtD,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBe,OAAO,EAAE,IAAI;MACbU,IAAI,EAAER;IACR,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd9B,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACnBe,OAAO,EAAE,KAAK;MACdC,OAAO,EAAEU,KAAK,CAACV;IACjB,CAAC,CAAC;EACJ;AACF,CAAC","ignoreList":[]}