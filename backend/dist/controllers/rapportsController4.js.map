{"version":3,"file":"rapportsController4.js","names":["RendezVous","require","Utilisateur","asyncHandler","validationResult","logger","buildRapportMedecins","debut","fin","groupBy","filtres","colonnes","$match","dateDebut","$gte","$lte","statut","$in","medecin","$exists","$ne","$lookup","from","localField","foreignField","as","$unwind","$group","_id","$first","totalRdv","$sum","rdvTermines","$cond","$eq","rdvConfirmes","rdvAnnules","dureeTotaleMinutes","$divide","$subtract","nombrePatientsUniques","$addToSet","retards","$and","$gt","dureeTotaleRetardMinutes","montantTotal","montantPaye","notesSatisfaction","$push","commentairesSatisfaction","$addFields","tauxFrequentation","$multiply","dureeMoyenneRdv","$add","tauxRetard","dureeMoyenneRetard","noteMoyenneSatisfaction","$size","$avg","nbPatientsUniques","tauxPaiement","$sort","$project","id","nom","prenom","specialite","email","telephone","dateEmbauche","includes","$filter","input","cond","exports","exporterRapport","req","res","format","params","body","formatsValides","status","json","succes","message","erreurs","champ","join","donnees","genererRapportPersonnalise","data","resultats","Error","contenu","contentType","extension","Parser","parser","fields","Object","keys","parse","ExcelJS","workbook","Workbook","worksheet","addWorksheet","length","headers","addRow","forEach","item","row","map","header","split","reduce","obj","key","undefined","getRow","font","bold","fill","type","pattern","fgColor","argb","columns","column","maxLength","eachCell","includeEmpty","cell","columnLength","value","toString","width","Math","min","max","buffer","xlsx","writeBuffer","JSON","stringify","date","Date","toISOString","replace","nomFichier","setHeader","Buffer","isBuffer","send","error","erreur","process","env","NODE_ENV","module"],"sources":["../../src/controllers/rapportsController4.js"],"sourcesContent":["const RendezVous = require('../models/RendezVous');\nconst Utilisateur = require('../models/Utilisateur');\nconst asyncHandler = require('express-async-handler');\nconst { validationResult } = require('express-validator');\nconst logger = require('../config/logger');\n\n/**\n * Construire le pipeline pour le rapport des médecins\n * @param {Date} debut - Date de début\n * @param {Date} fin - Date de fin\n * @param {string} groupBy - Type de regroupement\n * @param {Object} filtres - Filtres supplémentaires\n * @param {Array} colonnes - Colonnes à inclure\n * @returns {Array} - Pipeline d'agrégation\n */\nfunction buildRapportMedecins(debut, fin, groupBy, filtres = {}, colonnes = []) {\n  return [\n    // Filtrer par date et statut\n    {\n      $match: {\n        dateDebut: { $gte: debut, $lte: fin },\n        statut: { $in: ['termine', 'confirme', 'annule'] },\n        medecin: { $exists: true, $ne: null },\n        ...filtres\n      }\n    },\n    // Joindre les informations du médecin\n    {\n      $lookup: {\n        from: 'utilisateurs',\n        localField: 'medecin',\n        foreignField: '_id',\n        as: 'medecinInfo'\n      }\n    },\n    { $unwind: '$medecinInfo' },\n    // Grouper par médecin\n    {\n      $group: {\n        _id: '$medecin',\n        medecin: { $first: '$medecinInfo' },\n        totalRdv: { $sum: 1 },\n        rdvTermines: {\n          $sum: {\n            $cond: [{ $eq: ['$statut', 'termine'] }, 1, 0]\n          }\n        },\n        rdvConfirmes: {\n          $sum: {\n            $cond: [{ $eq: ['$statut', 'confirme'] }, 1, 0]\n          }\n        },\n        rdvAnnules: {\n          $sum: {\n            $cond: [{ $eq: ['$statut', 'annule'] }, 1, 0]\n          }\n        },\n        dureeTotaleMinutes: {\n          $sum: {\n            $cond: [\n              { $in: ['$statut', ['termine', 'confirme']] },\n              { $divide: [\n                { $subtract: ['$dateFin', '$dateDebut'] },\n                60 * 1000 // Convertir en minutes\n              ]},\n              0\n            ]\n          }\n        },\n        nombrePatientsUniques: { $addToSet: '$patient' },\n        // Statistiques de retard\n        retards: {\n          $sum: {\n            $cond: [\n              { $and: [\n                { $gt: ['$retard.minutes', 0] },\n                { $in: ['$statut', ['termine', 'confirme']] }\n              ]},\n              1,\n              0\n            ]\n          }\n        },\n        dureeTotaleRetardMinutes: {\n          $sum: {\n            $cond: [\n              { $and: [\n                { $gt: ['$retard.minutes', 0] },\n                { $in: ['$statut', ['termine', 'confirme']] }\n              ]},\n              '$retard.minutes',\n              0\n            ]\n          }\n        },\n        // Statistiques financières\n        montantTotal: { $sum: '$montant' },\n        montantPaye: {\n          $sum: {\n            $cond: [{ $eq: ['$statutPaiement', 'paye'] }, '$montant', 0]\n          }\n        },\n        // Statistiques de satisfaction\n        notesSatisfaction: {\n          $push: {\n            $cond: [\n              { $and: [\n                { $gt: ['$avis.note', 0] },\n                { $ne: ['$avis.note', null] }\n              ]},\n              '$avis.note',\n              '$$REMOVE'\n            ]\n          }\n        },\n        commentairesSatisfaction: {\n          $push: {\n            $cond: [\n              { $and: [\n                { $ne: ['$avis.commentaire', ''] },\n                { $ne: ['$avis.commentaire', null] }\n              ]},\n              '$avis.commentaire',\n              '$$REMOVE'\n            ]\n          }\n        }\n      }\n    },\n    // Calculer les indicateurs de performance\n    {\n      $addFields: {\n        // Taux de fréquentation (1 - annulations / total)\n        tauxFrequentation: {\n          $multiply: [\n            {\n              $cond: [\n                { $eq: ['$totalRdv', 0] },\n                0,\n                { $divide: [\n                  { $subtract: ['$totalRdv', '$rdvAnnules'] },\n                  '$totalRdv'\n                ] }\n              ]\n            },\n            100\n          ]\n        },\n        // Durée moyenne des rendez-vous (en minutes)\n        dureeMoyenneRdv: {\n          $cond: [\n            { $eq: [\n              { $add: ['$rdvTermines', '$rdvConfirmes'] },\n              0\n            ]},\n            0,\n            { $divide: [\n              '$dureeTotaleMinutes',\n              { $add: ['$rdvTermines', '$rdvConfirmes'] }\n            ]}\n          ]\n        },\n        // Taux de retard (retards / rdv terminés ou confirmés)\n        tauxRetard: {\n          $multiply: [\n            {\n              $cond: [\n                { $eq: [\n                  { $add: ['$rdvTermines', '$rdvConfirmes'] },\n                  0\n                ]},\n                0,\n                { $divide: [\n                  '$retards',\n                  { $add: ['$rdvTermines', '$rdvConfirmes'] }\n                ]}\n              ]\n            },\n            100\n          ]\n        },\n        // Durée moyenne des retards (en minutes)\n        dureeMoyenneRetard: {\n          $cond: [\n            { $eq: ['$retards', 0] },\n            0,\n            { $divide: ['$dureeTotaleRetardMinutes', '$retards'] }\n          ]\n        },\n        // Note moyenne de satisfaction\n        noteMoyenneSatisfaction: {\n          $cond: [\n            { $eq: [{ $size: '$notesSatisfaction' }, 0] },\n            null,\n            { $avg: '$notesSatisfaction' }\n          ]\n        },\n        // Nombre de patients uniques\n        nbPatientsUniques: { $size: '$nombrePatientsUniques' },\n        // Taux de paiement\n        tauxPaiement: {\n          $cond: [\n            { $eq: ['$montantTotal', 0] },\n            0,\n            { $multiply: [\n              { $divide: ['$montantPaye', '$montantTotal'] },\n              100\n            ]}\n          ]\n        }\n      }\n    },\n    // Trier par taux de fréquentation décroissant par défaut\n    { $sort: { tauxFrequentation: -1 } },\n    // Projeter les champs finaux\n    {\n      $project: {\n        _id: 0,\n        medecin: {\n          id: '$medecin._id',\n          nom: '$medecin.nom',\n          prenom: '$medecin.prenom',\n          specialite: '$medecin.specialite',\n          email: '$medecin.email',\n          telephone: '$medecin.telephone',\n          dateEmbauche: '$medecin.dateEmbauche',\n          statut: '$medecin.statut'\n        },\n        // Inclure dynamiquement les colonnes demandées\n        ...(colonnes.includes('totalRdv') && { totalRdv: 1 }),\n        ...(colonnes.includes('rdvTermines') && { rdvTermines: 1 }),\n        ...(colonnes.includes('rdvConfirmes') && { rdvConfirmes: 1 }),\n        ...(colonnes.includes('rdvAnnules') && { rdvAnnules: 1 }),\n        ...(colonnes.includes('tauxFrequentation') && { tauxFrequentation: 1 }),\n        ...(colonnes.includes('dureeTotaleMinutes') && { dureeTotaleMinutes: 1 }),\n        ...(colonnes.includes('dureeMoyenneRdv') && { dureeMoyenneRdv: 1 }),\n        ...(colonnes.includes('retards') && { retards: 1 }),\n        ...(colonnes.includes('tauxRetard') && { tauxRetard: 1 }),\n        ...(colonnes.includes('dureeMoyenneRetard') && { dureeMoyenneRetard: 1 }),\n        ...(colonnes.includes('nbPatientsUniques') && { nbPatientsUniques: 1 }),\n        ...(colonnes.includes('montantTotal') && { montantTotal: 1 }),\n        ...(colonnes.includes('montantPaye') && { montantPaye: 1 }),\n        ...(colonnes.includes('tauxPaiement') && { tauxPaiement: 1 }),\n        ...(colonnes.includes('noteMoyenneSatisfaction') && { noteMoyenneSatisfaction: 1 }),\n        // Inclure les détails si demandés\n        ...(colonnes.includes('details') && {\n          commentairesSatisfaction: {\n            $filter: {\n              input: '$commentairesSatisfaction',\n              as: 'commentaire',\n              cond: { $ne: ['$$commentaire', null] }\n            }\n          }\n        })\n      }\n    }\n  ];\n}\n\n/**\n * Exporter un rapport au format CSV ou Excel\n * POST /api/rapports/export\n * Accès: Admin\n */\nexports.exporterRapport = asyncHandler(async (req, res) => {\n  const { format = 'csv', ...params } = req.body;\n  \n  // Valider le format d'export\n  const formatsValides = ['csv', 'excel', 'json'];\n  if (!formatsValides.includes(format)) {\n    return res.status(400).json({\n      succes: false,\n      message: 'Format d\\'export non valide',\n      erreurs: [\n        { \n          champ: 'format', \n          message: `Le format doit être l'un des suivants: ${formatsValides.join(', ')}`\n        }\n      ]\n    });\n  }\n  \n  try {\n    // Générer le rapport\n    const { donnees } = await exports.genererRapportPersonnalise(\n      { body: params },\n      { json: (data) => data },\n      () => {}\n    );\n    \n    if (!donnees || !donnees.resultats) {\n      throw new Error('Aucune donnée à exporter');\n    }\n    \n    // Formater les données pour l'export\n    let contenu, contentType, extension;\n    \n    switch (format) {\n      case 'csv':\n        // Convertir en CSV\n        const { Parser } = require('json2csv');\n        const parser = new Parser({\n          fields: Object.keys(donnees.resultats[0] || {})\n        });\n        contenu = parser.parse(donnees.resultats);\n        contentType = 'text/csv';\n        extension = 'csv';\n        break;\n        \n      case 'excel':\n        // Convertir en Excel avec exceljs\n        const ExcelJS = require('exceljs');\n        const workbook = new ExcelJS.Workbook();\n        const worksheet = workbook.addWorksheet('Rapport');\n        \n        // Ajouter les en-têtes\n        if (donnees.resultats.length > 0) {\n          const headers = Object.keys(donnees.resultats[0]);\n          worksheet.addRow(headers);\n          \n          // Ajouter les données\n          donnees.resultats.forEach(item => {\n            const row = headers.map(header => {\n              // Gérer les sous-objets (comme medecin.nom)\n              return header.split('.').reduce((obj, key) => \n                obj && obj[key] !== undefined ? obj[key] : '', item);\n            });\n            worksheet.addRow(row);\n          });\n          \n          // Mettre en forme les en-têtes\n          worksheet.getRow(1).font = { bold: true };\n          worksheet.getRow(1).fill = {\n            type: 'pattern',\n            pattern: 'solid',\n            fgColor: { argb: 'FFD3D3D3' }\n          };\n          \n          // Ajuster la largeur des colonnes\n          worksheet.columns.forEach(column => {\n            let maxLength = 0;\n            column.eachCell({ includeEmpty: true }, cell => {\n              const columnLength = cell.value ? cell.value.toString().length : 10;\n              if (columnLength > maxLength) {\n                maxLength = columnLength;\n              }\n            });\n            column.width = Math.min(Math.max(maxLength + 2, 10), 50);\n          });\n        }\n        \n        // Générer le buffer Excel\n        const buffer = await workbook.xlsx.writeBuffer();\n        contenu = buffer;\n        contentType = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet';\n        extension = 'xlsx';\n        break;\n        \n      case 'json':\n      default:\n        // Retourner du JSON\n        contenu = JSON.stringify(donnees.resultats, null, 2);\n        contentType = 'application/json';\n        extension = 'json';\n    }\n    \n    // Générer un nom de fichier avec la date et l'heure actuelles\n    const date = new Date().toISOString().replace(/[:.]/g, '-');\n    const nomFichier = `rapport-${date}.${extension}`;\n    \n    // Envoyer le fichier\n    res.setHeader('Content-Type', contentType);\n    res.setHeader('Content-Disposition', `attachment; filename=\"${nomFichier}\"`);\n    \n    if (Buffer.isBuffer(contenu)) {\n      res.send(contenu);\n    } else {\n      res.send(contenu);\n    }\n    \n  } catch (error) {\n    logger.error('Erreur lors de l\\'export du rapport:', error);\n    \n    res.status(500).json({\n      succes: false,\n      message: 'Une erreur est survenue lors de l\\'export du rapport',\n      erreur: process.env.NODE_ENV === 'development' ? error.message : undefined\n    });\n  }\n});\n\n// Exporter les fonctions pour les tests\nmodule.exports = {\n  ...module.exports,\n  buildRapportMedecins\n};\n"],"mappings":"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","ignoreList":[]}